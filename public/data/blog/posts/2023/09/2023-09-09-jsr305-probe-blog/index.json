{
  "id": "2023-09-2023-09-09-jsr305-probe-blog",
  "url": "/blog/2023/09/09/2023-09-09-jsr305-probe-blog/",
  "title": "Detecting deprecated JSR-305 imports Probe",
  "date": "2023-09-09",
  "authors": [
    "jagruti"
  ],
  "tags": [
    "gsoc",
    "gsoc2023",
    "healthscore",
    "probes",
    "plugin"
  ],
  "summary": "== Introduction This blog post describes the latest addition to the plugin health scoring system developed as part of : a probe that detects usages of the framework in plugins. The provides annotations to detect software defects. Its executive committee . It is important to stop using the framework for the following reasons: - It is no longer maintained. -â€¦",
  "opengraph_image": "/images/gsoc/2023/jagruti/jsr-305-probe-image.png",
  "content_html": "<div class=\"sect1\">\n<h2 id=\"introduction\"><a class=\"anchor\" href=\"#introduction\"></a>Introduction</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This blog post describes the latest addition to the plugin health scoring system developed as part of <a href=\"/projects/gsoc/2023/projects/add-probes-to-plugin-health-score/\">my Google summer of Code Project</a>: a probe that detects usages of the <code>JSR-305</code> framework in plugins.</p>\n</div>\n<div class=\"paragraph\">\n<p>The <a href=\"https://jcp.org/en/jsr/detail?id=305\"><code>JSR-305</code> framework</a> provides annotations to detect software defects.\nIts executive committee <a href=\"https://jcp.org/en/jsr/detail?id=305\">voted it as dormant since May 2012</a>.\nIt is important to stop using the framework for the following reasons:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>It is no longer maintained.</p>\n</li>\n<li>\n<p>The annotations have questionable license.</p>\n</li>\n<li>\n<p>The annotations are in the reserved javax namespace and there is no public release of the spec.\nSince it is not actively maintained, there is little chance this would be published.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>For more insight, refer to the <a href=\"https://groups.google.com/g/jenkinsci-dev/c/uE1wwtVi1W0/m/gLxdEJmlBQAJ\">Jenkins developer mailing list conversation</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>The <code>@Nonnull</code> and <code>@CheckForNull</code> annotations, which are part of JSR-305, have been <a href=\"/doc/developer/tutorial-improve/replace-jsr-305-annotations/\">deprecated since 2016</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>The <code>JSR-305</code> probe checks whether the deprecated annotations are used in a plugin.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"importance-of-the-probe\"><a class=\"anchor\" href=\"#importance-of-the-probe\"></a>Importance of the probe</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This probe identifies the outdated annotations used in a plugin and highlight them in the scoring system.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"challenges-and-learning\"><a class=\"anchor\" href=\"#challenges-and-learning\"></a>Challenges and Learning</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The outdated annotations are imported in <code>.java</code> files.\nMy first approach was to go for an abstract class because I assumed there could be other probes that may need to look for code in <code>.java</code> files.\nAfter a series of reviews, one of the mentors pointed out that to comply with the <a href=\"https://github.com/openrewrite/rewrite-jenkins/blob/98bfbecc9c9507a069c9ac1f1e35cd5dd0fa0687/src/main/resources/META-INF/rewrite/rewrite.yml\">OpenWrite rule</a>, all imports from the <code>javax.annotation</code> package should be checked for deprecation.</p>\n</div>\n<div class=\"paragraph\">\n<p>Also, based on the <a href=\"https://blog.devgenius.io/key-principles-in-software-dry-kiss-yagni-solid-and-other-acronyms-98e5575a6942\">YAGNI principle</a> (\"You Aren't Gonna Need It\"), which means features are developed only when you need them, the <code>abstract</code> wasn't the current requirement.\nI restructured the code and used a single class to implement the probe.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"conclusion-and-outcome\"><a class=\"anchor\" href=\"#conclusion-and-outcome\"></a>Conclusion and Outcome</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This probe will identify the deprecated annotations and let maintainers know which imports in a plugin require replacement.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"links\"><a class=\"anchor\" href=\"#links\"></a>Links</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>For more information or to find answers to any questions you might have, please visit the official GSoC 2023 project <a href=\"/projects/gsoc/2023/projects/add-probes-to-plugin-health-score/\">Adding Probes to \"Plugin Health Score\"</a> description page.</p>\n</div>\n</div>\n</div>"
}