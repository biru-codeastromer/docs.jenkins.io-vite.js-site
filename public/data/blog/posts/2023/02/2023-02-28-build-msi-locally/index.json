{
  "id": "2023-02-2023-02-28-build-msi-locally",
  "url": "/blog/2023/02/01/2023-02-28-build-msi-locally/",
  "title": "How to build an unsigned Jenkins MSI on your Windows machine",
  "date": "2023-02-01",
  "authors": [
    "gounthar",
    "notmyfault",
    "kmartens27"
  ],
  "tags": [
    "jenkins",
    "windows",
    "msi"
  ],
  "summary": "Should you ever need to rebuild a Jenkins MSI on your Windows machine, here is a way to do it. Pre-requisites Jenkins WAR file First, you should download the Jenkins war file that will be inside the MSI file. You can access it from the official Jenkins website or from the Jenkins update center . Check the Jenkins download page…",
  "opengraph_image": "/images/post-images/2020/07-windows-support-updates/header_image.png",
  "content_html": "<div class=\"paragraph\">\n<p>Should you ever need to rebuild a Jenkins MSI on your Windows machine, here is a way to do it.</p>\n</div>\n<div class=\"sect1\">\n<h2 id=\"pre-requisites\"><a class=\"anchor\" href=\"#pre-requisites\"></a>Pre-requisites</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"jenkins-war-file\"><a class=\"anchor\" href=\"#jenkins-war-file\"></a>Jenkins WAR file</h3>\n<div class=\"paragraph\">\n<p>First, you should download the Jenkins war file that will be inside the MSI file.\nYou can access it from the official Jenkins website or from <a href=\"https://updates.jenkins.io/\">the Jenkins update center</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Check the <a href=\"/download/\">Jenkins download page</a> to download the latest weekly version of Jenkins for example.\nYou can always access <a href=\"https://updates.jenkins.io/latest/jenkins.war\">the direct link</a> to get the latest weekly version, but you won&#8217;t necessarily know which version number you are using.\nJust saying.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"git\"><a class=\"anchor\" href=\"#git\"></a>Git</h3>\n<div class=\"paragraph\">\n<p>There are quite a few ways to install Git on Windows, but the most straightforward way is to see what the <a href=\"https://git-scm.com/download/win\">official Git website recommends</a>.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"install-msbuild\"><a class=\"anchor\" href=\"#install-msbuild\"></a>Install MSBuild</h3>\n<div class=\"paragraph\">\n<p>You can install <a href=\"https://aka.ms/vs/17/release/vs_BuildTools.exe\">MSBuild</a> from Visual Studio or from the <a href=\"https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2022\">Build Tools for Visual Studio</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>This command line tool is used to build the MSI file.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"install-net-framework-3-5\"><a class=\"anchor\" href=\"#install-net-framework-3-5\"></a>Install .NET Framework 3.5</h3>\n<div class=\"paragraph\">\n<p>You may already have it installed on your machine, but not activated.\nYou can activate it from the Windows Features dialog box.</p>\n</div>\n<div class=\"paragraph\">\n<p>To access this dialog box, press the keys <kbd>⊞ Win</kbd> + <kbd>R</kbd>, then enter the command <code>appwiz.cpl</code> and push enter.\nSearch for</p>\n</div>\n<div class=\"quoteblock\">\n<blockquote>\n<div class=\"paragraph\">\n<p>Turn Windows features on or off.</p>\n</div>\n</blockquote>\n</div>\n<div class=\"paragraph\">\n<p>Tick the <code>.NET Framework 3.5</code> entry and install.</p>\n</div>\n<div class=\"admonitionblock important\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-important\" title=\"Important\"></i>\n</td>\n<td class=\"content\">\nnow run Windows Update to check for security updates.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>If it is not installed yet, you can install <a href=\"https://dotnet.microsoft.com/en-us/download/dotnet-framework/net35-sp1\">.NET Framework 3.5</a> from the Windows Features.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"check-if-you-have-powershell\"><a class=\"anchor\" href=\"#check-if-you-have-powershell\"></a>Check if you have PowerShell</h3>\n<div class=\"paragraph\">\n<p>In recent versions of Windows, PowerShell is already installed and accessible through the <a href=\"https://support.microsoft.com/en-us/windows/command-prompt-and-windows-powershell-for-windows-11-6453ce98-da91-476f-8651-5c14d5777c20\">terminal</a> application.\nAt the time of writing, the pre-installed version is <code>5.1.22621.963</code>.\nYou can also install the latest version from the <a href=\"https://apps.microsoft.com/store/detail/powershell/9MZ1SNWT0N5D\">Microsoft Store</a> (7.3.2 at the time of writing).<br></p>\n</div>\n<div class=\"paragraph\">\n<p>You could also install PowerShell from GitHub by issuing the following command:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-powershell\" data-lang=\"powershell\">winget show \"Microsoft.PowerShell\" -s winget</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>This would give an output similar to:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-powershell\" data-lang=\"powershell\">Found PowerShell [Microsoft.PowerShell]\nVersion: 7.3.2.0\nPublisher: Microsoft Corporation\nPublisher Url: https://github.com/PowerShell/PowerShell/\nPublisher Support Url: https://github.com/PowerShell/PowerShell/issues\nAuthor: Microsoft Corporation\nMoniker: pwsh\nDescription:\n  PowerShell is a cross-platform (Windows, Linux, and macOS) automation and configuration tool/framework that works well with your existing tools and is optimized for dealing with structured data (e.g. JSON, CSV, XML, etc.), REST APIs, and object models.\n  It includes a command-line shell, an associated scripting language and a framework for processing cmdlets.\nHomepage: https://microsoft.com/PowerShell\nLicense: MIT\nLicense Url: https://github.com/PowerShell/PowerShell/blob/master/LICENSE.txt\nCopyright: Copyright (c) Microsoft Corporation\nCopyright Url: https://github.com/PowerShell/PowerShell/blob/master/LICENSE.txt\nRelease Notes Url: https://github.com/PowerShell/PowerShell/releases/tag/v7.3.2\nTags:\n  command-line\n  cross-platform\n  open-source\n  powershell\n  pwsh\n  shell\nInstaller:\n  Installer Type: wix\n  Installer Url: https://github.com/PowerShell/PowerShell/releases/download/v7.3.2/PowerShell-7.3.2-win-x64.msi\n  Installer SHA256: a4f7d081c5f74bc8d6c75f1dfee382b7fd9335361181748fee590ecdbc96cb26\n  Release Date: 2023-01-24</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You can see that the latest version is <code>7.3.2</code> and that the installer is a <code>.msi</code> file located on GitHub.\nJust follow the link provided with your browser and install PowerShell from this file once it has downloaded.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"build-the-msi\"><a class=\"anchor\" href=\"#build-the-msi\"></a>Build the MSI</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"clone-the-jenkins-packaging-repository\"><a class=\"anchor\" href=\"#clone-the-jenkins-packaging-repository\"></a>Clone the Jenkins packaging repository</h3>\n<div class=\"paragraph\">\n<p>Choose your <code>git</code> tool and clone the <a href=\"https://github.com/jenkinsci/packaging.git\">Jenkins packaging repository</a> on your machine.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"prepare-the-build\"><a class=\"anchor\" href=\"#prepare-the-build\"></a>Prepare the build</h3>\n<div class=\"paragraph\">\n<p>Open a <code>terminal</code> window and go to the folder where you cloned the repository.\nFor example <code>C:\\jenkinsci\\packaging\\</code>.\nYou now have to declare where you downloaded the Jenkins war file, so the build script can find it.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-powershell\" data-lang=\"powershell\">$env:War = \"$env:USERPROFILE\\jenkins.war\"</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>If you have previously moved it into your repository clone folder, you can use this command instead:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-powershell\" data-lang=\"powershell\">$env:War = \"C:\\jenkinsci\\packaging\\msi\\build\\jenkins.war\"</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"build-the-msi-2\"><a class=\"anchor\" href=\"#build-the-msi-2\"></a>Build the MSI</h3>\n<div class=\"paragraph\">\n<p>Enter the subfolder <code>msi\\build</code> and run the following command:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-powershell\" data-lang=\"powershell\">.\\build.ps1</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You should get an output similar to:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-powershell\" data-lang=\"powershell\">Extracting components\nJenkinsVersion = 2.392\nRestoring packages before build\nAll packages listed in packages.config are already installed.\nBuilding MSI\nMSBuild version 17.4.0+18d5aef85 for .NET Framework\nBuild started 01/12/2022 20:53:30.\nProject \"C:\\jenkinsci\\packaging\\msi\\build\\jenkins.wixproj\" on node 1 (default targets).\nSetConstants:\n  EncodedVersion = 2.255.3920\nCompile:\nSkipping target \"Compile\" because all output files are up-to-date with respect to the input files.\nAssignCultures:\n  Culture: en-US\nLink:\n  C:\\jenkinsci\\packaging\\msi\\build\\packages\\WiX.3.11.1\\build\\..\\tools\\Light.exe -out C:\\jenkinsci\\packaging\\msi\\build\\bi\n  n\\Release\\en-US\\jenkins-2.392.msi -pdbout C:\\jenkinsci\\packaging\\msi\\build\\bin\\Release\\en-US\\jenkins-2.392.wixpdb -sw1076 -cultures:en-US -ext C:\\Support\\users\\jenkinsci\\packaging\\packaging\\msi\\build\\packages\\WiX.3.11.1\\build\\..\\tools\\\\WixUIExtension.dll -ext C:\\jenkinsci\\packaging\\msi\\bu  ild\\packages\\WiX.3.11.1\\build\\..\\tools\\\\WixNetFxExtension.dll -ext C:\\jenkinsci\\packaging\\msi\\build\\packages\\WiX.3.11.1\\build\\..\\tools\\\\WixUtilExtension.dll -ext .\\msiext-1.5\\WixExtensions\\WixCommonUIExtension.dll -ext C:\\jenkinsci\\packaging\\msi\\build\\packages\\WiX.3.11.1\\build\\..\\tools\\\\WixFirewallExtension.dll -fv -loc jenkins_en-US.wxl -spdb -contentsfile obj\\Release\\jenkins.wixproj.BindContentsFileListen-US.txt -outputsfile obj\\Release\\jenkins.wixproj.BindOutputs FileListen-US.txt -builtoutputsfile obj\\Release\\jenkins.wixproj.BindBuiltOutputsFileListen-US.txt -wixprojectfile C:\\jenkinsci\\packaging\\msi\\build\\jenkins.wixproj obj\\Release\\jenkins.wixobj\n  Windows Installer XML Toolset Linker version 3.11.1.2318\n  Copyright (c) .NET Foundation and contributors. All rights reserved.\n\n  jenkins -&gt; C:\\jenkinsci\\packaging\\msi\\build\\bin\\Release\\en-US\\jenkins-2.392.msi\nDone Building Project \"C:\\jenkinsci\\packaging\\msi\\build\\jenkins.wixproj\" (default targets).\n\n\nBuild succeeded.\n    0 Warning(s)\n    0 Error(s)\n\nTime Elapsed 00:00:08.26</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"locate-the-generated-msi-file\"><a class=\"anchor\" href=\"#locate-the-generated-msi-file\"></a>Locate the generated MSI file</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The MSI file is located in the <code>.\\bin\\Release\\en-US\\</code> folder.\nIn this folder, you will find the generated MSI file and its <code>sha256</code> file.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-powershell\" data-lang=\"powershell\"> ls\n\n    Directory: C:\\jenkinsci\\packaging\\msi\\build\\bin\\Release\\en-US\n\n\nMode                 LastWriteTime         Length Name\n----                 -------------         ------ ----\n-a----        01/12/2022     20:53      105107456 jenkins-2.392.msi\n-a----        01/12/2022     20:53             84 jenkins-2.392.msi.sha256</code></pre>\n</div>\n</div>\n</div>\n</div>"
}