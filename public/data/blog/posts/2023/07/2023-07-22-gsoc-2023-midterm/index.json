{
  "id": "2023-07-2023-07-22-gsoc-2023-midterm",
  "url": "/blog/2023/07/22/2023-07-22-gsoc-2023-midterm/",
  "title": "Jenkins in Google Summer of Code Midterm Recap",
  "date": "2023-07-22",
  "authors": [
    "ash-sxn",
    "harsh-ps-2003",
    "jagruti",
    "vandit1604"
  ],
  "tags": [
    "gsoc",
    "gsoc2023",
    "midterm"
  ],
  "summary": "The Jenkins in GSoC program recently reached its midterm milestone for GSoC 2023. This milestone served to assess performance, and precipitate pass/fail decisions. Taking time to evaluate the progress and workflow of the project provides an opportunity to correct course and address underlying issues. Earlier this month, on the Jenkins Online Meetup , GSoC contributors presented midterm status and progressâ€¦",
  "opengraph_image": "/images/gsoc/opengraph.png",
  "content_html": "<div class=\"paragraph\">\n<p>The Jenkins in GSoC program recently reached its midterm milestone for GSoC 2023.\nThis milestone served to assess performance, and precipitate pass/fail decisions.\nTaking time to evaluate the progress and workflow of the project provides an opportunity to correct course and address underlying issues.</p>\n</div>\n<div class=\"paragraph\">\n<p>Earlier this month, on the <a href=\"https://www.meetup.com/jenkins-online-meetup/\">Jenkins Online Meetup</a>, GSoC contributors presented midterm status and progress for their projects, below is a recap.\nThank you Jagruti, Harsh, Vandit, and Ashutosh for your contributions to Jenkins!</p>\n</div>\n<div class=\"sect1\">\n<h2 id=\"add-probes-to-plugin-health-score\"><a class=\"anchor\" href=\"#add-probes-to-plugin-health-score\"></a><a href=\"/projects/gsoc/2023/projects/add-probes-to-plugin-health-score/\">Add Probes to \"Plugin Health Score\"</a></h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>By <a href=\"https://github.com/Jagrutiti/\">Jagruti Tiwari</a></p>\n</div>\n<div class=\"paragraph\">\n<p>A probe collects data about each plugin.\nIt is an automated system that ensures the Jenkins Community-defined rules are followed.\nThe probe data is used by health scoring to compute a score, and a higher-quality probe receives a good score.\nConversely, an obsolete or outdated plugin is given a lower score.</p>\n</div>\n<div class=\"paragraph\">\n<p>Sharing details about the probes that I worked on during the first phase of GSoC.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"unreleased-production-changes-probe\"><a class=\"anchor\" href=\"#unreleased-production-changes-probe\"></a>Unreleased Production Changes Probe</h3>\n<div class=\"paragraph\">\n<p>A bug fix, security improvement, or new feature can only be beneficial when it&#8217;s actually released.\nThe \"Unreleased Production Changes\" probe is designed to detect unreleased commits in the production files.</p>\n</div>\n<div class=\"paragraph\">\n<p>This probe&#8217;s primary goal is to identify unreleased production commits specifically in the Maven production files.</p>\n</div>\n<div class=\"paragraph\">\n<p>Following my mentors' advice, I began by writing test cases to accurately reproduce the probe&#8217;s requirements. Subsequently, I added the necessary code to pass each of these test cases.</p>\n</div>\n<div class=\"paragraph\">\n<p>During the implementation, I utilized the JGit library and familiarized myself with its features.\nHowever, I encountered some challenges due to a lack of depth in Git concepts, which required me to delve deeper and strengthen my understanding of Git concepts along the way.</p>\n</div>\n<div class=\"paragraph\">\n<p>Read the <a href=\"/blog/2023/07/16/unreleased-production-changes-probe\">unreleased production changes</a> blog post for more details on the probe.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"the-third-party-repository-detection-probe\"><a class=\"anchor\" href=\"#the-third-party-repository-detection-probe\"></a>The Third-Party Repository Detection Probe</h3>\n<div class=\"paragraph\">\n<p>By definition, a third-party repository is a repository that is not hosted at <a href=\"https://repo.jenkins-ci.org/\">https://repo.jenkins-ci.org</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>The third-party repository detection probe ensures that plugins are only built from trusted and reliable Maven repositories.</p>\n</div>\n<div class=\"paragraph\">\n<p>This probe was requested by the Jenkins community.</p>\n</div>\n<div class=\"paragraph\">\n<p>One of the major challenges in implementing this probe was considering the parent and child pom relationships from all angles.</p>\n</div>\n<div class=\"paragraph\">\n<p>Certain edge-case scenarios were not initially taken into account while specifying the probe, and due to the number of open questions, the probe was temporarily put on hold until further research was conducted.</p>\n</div>\n<div class=\"paragraph\">\n<p>Throughout the process, I extensively read the Maven documentation to gain a better understanding of how to test POM structure, inheritance, and Maven API.</p>\n</div>\n<div class=\"paragraph\">\n<p>Read the <a href=\"/blog/2023/07/20/third-party-repository-detection-probe\">third party repository detection probe</a> blog post for more details on the probe.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"github-security-scan-workflow-probe\"><a class=\"anchor\" href=\"#github-security-scan-workflow-probe\"></a>GitHub Security Scan Workflow Probe</h3>\n<div class=\"paragraph\">\n<p>The Security Scan probe identifies whether the plugin is configured to execute the security action.</p>\n</div>\n<div class=\"paragraph\">\n<p>From a security perspective, this probe is crucial as it checks for known security breaches and vulnerabilities in a plugin.</p>\n</div>\n<div class=\"paragraph\">\n<p>Its primary purpose is to ensure that the security scan is correctly configured in the plugin&#8217;s GitHub Action.</p>\n</div>\n<div class=\"paragraph\">\n<p>Additionally, this probe involves refactoring existing classes to avoid code duplication, and it shares similarities with the JEP-229 (Continuous Delivery) probe, which also looks for CI configurations in GitHub Actions.</p>\n</div>\n<div class=\"paragraph\">\n<p>Throughout this process, I have gained knowledge in leveraging the class hierarchy to build an abstract probe that can be implemented by any probes requiring GitHub Action configuration checks.</p>\n</div>\n<div class=\"paragraph\">\n<p>The findings of this probe will be highly beneficial to the security team, as it helps identify any gaps and enables the improvement of the overall security of the Jenkins plugin ecosystem.</p>\n</div>\n<div class=\"paragraph\">\n<p>Read the <a href=\"/blog/2023/07/16/security-scan-probe-blog\">security scan probe</a> blog post for more details on the probe.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"what-about-the-second-half-of-gsoc\"><a class=\"anchor\" href=\"#what-about-the-second-half-of-gsoc\"></a>What about the second-half of GSoC?</h3>\n<div class=\"paragraph\">\n<p>In the second half of the GSoC project, I will be working on a few more probes, including the following:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Detect Renovate usage:</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>This probe will identify how many plugins use the Renovate bot CLI to detect outdated dependencies in the plugin.</p>\n</li>\n<li>\n<p>If any outdated dependencies are found, it will automatically create a pull request (PR) to update the dependency.</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Count open tickets:</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>This probe will detect open issues in both Github and JIRA.</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>In addition to these new probes, I will also be focusing on fixing bugs and making enhancements to the existing probes.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"gitlab-plugin-modernization\"><a class=\"anchor\" href=\"#gitlab-plugin-modernization\"></a><a href=\"https://www.jenkins.io/projects/gsoc/2023/projects/gitlab-plugin-modernization/\">GitLab Plugin Modernization</a></h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>By <a href=\"https://github.com/harsh-ps-2003/\">Harsh Pratap Singh</a></p>\n</div>\n<div class=\"paragraph\">\n<p>The GitLab Plugin facilitates seamless interaction between Jenkins and GitLab.\nThis project involves replacing the usage of the outdated RESTEasy library in the plugin with GitLab4J-API through the GitLab API Jenkins Library Plugin.</p>\n</div>\n<div class=\"paragraph\">\n<p>This migration holds significant importance for the following reasons:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>The migration will significantly reduce future maintenance issues.</p>\n</li>\n<li>\n<p>It makes the plugin more lightweight by reducing dependencies.</p>\n</li>\n<li>\n<p>It improves consistency with other Jenkins plugins.</p>\n</li>\n<li>\n<p>It enhances documentation and overall user experience.</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>During Coding Phase 1, the following achievements were made:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Successfully completed the migration from RESTEasy to GitLab4J-API via the GitLab-API plugin.</p>\n</li>\n<li>\n<p>Conducted interactive testing of the partially migrated Plugin.</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>To use the upcoming modernized GitLab Plugin, please ensure the following requirements are met:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Minimum GitLab version: <code>14.0</code>.</p>\n</li>\n<li>\n<p>Minimum Jenkins version: <code>2.387.3</code>.</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>Over the years, GitLab has evolved significantly.\nDuring the migration process, we discovered that the plugin will soon have the removal of GitLab API V3 support, as GitLab now only supports V4 of its API.\nWe strongly encourage V3 users to switch to V4 as soon as possible.</p>\n</div>\n<div class=\"paragraph\">\n<p>The following tasks are still in progress during the 2nd Coding Phase:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Adapting the Webhooks to GitLab4J-API&#8217;s events (completed)</p>\n</li>\n<li>\n<p>Migrating the Proxy settings</p>\n</li>\n<li>\n<p>Adapting the unit and integration tests (work in progress)</p>\n</li>\n<li>\n<p>Improving the documentation</p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"building-jenkins-io-with-alternative-tools\"><a class=\"anchor\" href=\"#building-jenkins-io-with-alternative-tools\"></a><a href=\"https://www.jenkins.io/projects/gsoc/2023/projects/alternative-jenkinsio-build-tool/\">Building Jenkins.io with Alternative Tools</a></h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>By <a href=\"https://www.jenkins.io/blog/authors/vandit1604/\">Vandit Singh</a></p>\n</div>\n<div class=\"paragraph\">\n<p>Jenkins users frequently refer to <a href=\"/\">jenkins.io</a> for documentation, and a new LTS line is released and available to all Jenkins users worldwide every 12 weeks.\nHowever, the documentation for each prior edition is not currently maintained, and that&#8217;s where my project comes in to provide Versioned Documentation for the users of the Jenkins community.</p>\n</div>\n<div class=\"paragraph\">\n<p>With my project, users will be able to switch between different versions of the documentation, depending on the version of Jenkins they are running.\nTo achieve this, we adopt Antora, which comes with versioning out-of-the-box and creates documentation pages using asciidoc.\nAdditionally, Gatsby will be used to generate some of the YAML file-generated components.\nThis way, we aim to enhance the accessibility and usability of the documentation for Jenkins users.</p>\n</div>\n<div class=\"paragraph\">\n<p>Till now, we have migrated all documentation from <a href=\"https://www.jenkins.io/\">jenkins.io</a> which leaves us only with the Gatsby part of the implementation.\nThe completed components include:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>User Guide</p>\n</li>\n<li>\n<p>Solution Pages</p>\n</li>\n<li>\n<p>Tutorials</p>\n</li>\n<li>\n<p>Developer Guide</p>\n</li>\n<li>\n<p>Security</p>\n</li>\n<li>\n<p>Subprojects</p>\n</li>\n<li>\n<p>Community Section</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>With the successful migration of the above components, our next focus will be on working with the following components or single pages using Gatsby as the framework:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Blogs</p>\n</li>\n<li>\n<p>Roadmap</p>\n</li>\n<li>\n<p>Security Advisories</p>\n</li>\n<li>\n<p>Download</p>\n</li>\n<li>\n<p>Changelog</p>\n</li>\n<li>\n<p>Upgrade Guide</p>\n</li>\n<li>\n<p>About</p>\n</li>\n<li>\n<p>Homepage</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>As we enter the 2nd Coding Phase of GSoC, completing these sections/pages will mark the end of the project and the full migration from Awestruct to Antora and Gatsby.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"docker-based-jenkins-quickstart-examples\"><a class=\"anchor\" href=\"#docker-based-jenkins-quickstart-examples\"></a><a href=\"https://www.jenkins.io/projects/gsoc/2023/projects/docker-compose-build/\">Docker-based Jenkins Quickstart Examples</a></h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>By <a href=\"https://www.jenkins.io/blog/authors/ash-sxn/\">Ashutosh Saxena</a></p>\n</div>\n<div class=\"paragraph\">\n<p>The project&#8217;s goal is to address the problems and complexities users often face when setting up Jenkins with Docker.\nThe current process involves multiple intimidating steps with security risks.\nSo, how are we solving these problems?</p>\n</div>\n<div class=\"paragraph\">\n<p>The intimidating steps can be simplified by using Docker Compose to hide all the complexities of Docker.\nAdditionally, we have created scripts to automate the running of the Jenkins container with Docker.\nOne script is called <code>jenkins_init.sh</code>, and another script called <code>jenkins_teardown.sh</code> is used to clean everything.</p>\n</div>\n<div class=\"paragraph\">\n<p>To address the security risk of running jobs on the controller, we are using the controller and agent as separate containers.\nFor this purpose, we use another script called <code>keygen.sh</code> that creates and updates <code>SSH</code> keys.</p>\n</div>\n<div class=\"paragraph\">\n<p>For the tutorial part, it is essential to lower the barrier to entry for Jenkins.\nTherefore, the user will only need to add a keyword to the <code>jenkins_init.sh</code> script.\nFor example, for a Maven tutorial, the user can simply run <code>./jenkins_init.sh maven</code> to start the tutorial.</p>\n</div>\n<div class=\"paragraph\">\n<p>Additionally, everything now works with <code>Gitpod</code> with just a click.</p>\n</div>\n<div class=\"paragraph\">\n<p>Things to do during the 2nd Coding Phase:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Add more tutorials and integrate them with ./jenkins_init.sh.</p>\n</li>\n<li>\n<p>Provide support for Windows without WSL.</p>\n</li>\n<li>\n<p>Regularly test all the tutorial files and scripts.</p>\n</li>\n<li>\n<p>Develop concise and easy-to-understand documentation for new and updated tutorials.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"end-note\"><a class=\"anchor\" href=\"#end-note\"></a>End Note</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>A full recording from the meetup can be found <a href=\"https://youtu.be/W4eSVCTmqb8\">HERE</a> and slides are <a href=\"https://docs.google.com/presentation/d/1kfGd0IB2PWp_yzSDFk5ClY00qZGreGjirtqL7-SZ1js/edit?usp=sharing\">HERE</a>.</p>\n</div>\n</div>\n</div>"
}