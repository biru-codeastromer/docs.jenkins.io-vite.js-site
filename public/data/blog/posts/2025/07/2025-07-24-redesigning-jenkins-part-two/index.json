{
  "id": "2025-07-2025-07-24-redesigning-jenkins-part-two",
  "url": "/blog/2025/07/24/2025-07-24-redesigning-jenkins-part-two/",
  "title": "Redesigning Jenkins (Part Two)",
  "date": "2025-07-24",
  "authors": [
    "janfaracik"
  ],
  "tags": [
    "jenkins",
    "user-experience",
    "ux"
  ],
  "summary": "In Part One we discussed the motivation behind redesigning Jenkins, the most used CI/CD platform in the world, and the technical challenges that come with such an effort.",
  "opengraph_image": "/images/post-images/2025/07/24/redesigning-jenkins-part-two.png",
  "content_html": "<style>\n    :root {\n      --aurora:\n              radial-gradient(at 81% 35%, var(--orange) 0, transparent 50%),\n              radial-gradient(at 80% 84%, var(--cyan) 0, transparent 50%),\n              radial-gradient(at 88% 31%, var(--purple) 0, transparent 50%),\n              radial-gradient(at 94% 32%, var(--pink) 0, transparent 50%),\n              radial-gradient(at 49% 21%, var(--brown) 0, transparent 50%),\n              radial-gradient(at 31% 46%, var(--teal) 0, transparent 50%),\n              radial-gradient(at 90% 16%, var(--red) 0, transparent 50%),\n              radial-gradient(at 0% 88%, var(--yellow) 0, transparent 50%),\n              radial-gradient(at 42% 63%, var(--brown) 0, transparent 50%),\n              radial-gradient(at 96% 0%, var(--yellow) 0, transparent 50%);\n    }\n\n    .app-blog-image--masthead {\n      overflow: clip !important;\n      perspective: 600px;\n\n      .app-jenkins-preview {\n        position: absolute;\n        inset: 50%;\n        translate: -50% -25%;\n        transform-style: preserve-3d;\n        backdrop-filter: blur(10px);\n        background-color: color-mix(in srgb, white 80%, transparent);\n        box-shadow: 0 0 30px rgba(0, 0, 0, 0.15);\n        border-radius: 12px;\n        width: 85%;\n        aspect-ratio: 2938 / 1376;\n\n        &::after {\n          content: \"\";\n          position: absolute;\n          inset: 0;\n          background-image: url(\"/images/post-images/2025/07/24/preview.png\");\n          background-size: contain;\n          background-position: top;\n        }\n      }\n\n      .app-jenkins-preview:nth-child(1) {\n        z-index: 3;\n        transform: rotateX(var(--masthead-rotation-1)) translateY(110px);\n      }\n\n      .app-jenkins-preview:nth-child(2) {\n        z-index: 2;\n        transform: rotateX(var(--masthead-rotation-2)) translateY(50px) scale(0.9);\n        background-color: color-mix(in srgb, white 70%, transparent);\n\n        &::after {\n          opacity: 0.9;\n        }\n      }\n\n      .app-jenkins-preview:nth-child(3) {\n        z-index: 1;\n        transform: rotateX(var(--masthead-rotation-3)) translateY(-5px) scale(0.8);\n        background-color: color-mix(in srgb, white 50%, transparent);\n\n        &::after {\n          opacity: 0.6;\n        }\n      }\n\n      .app-jenkins-preview:nth-child(4) {\n        z-index: 0;\n        transform: rotateX(var(--masthead-rotation-4)) translateY(-55px) scale(0.7);\n        background-color: color-mix(in srgb, white 30%, transparent);\n\n        &::after {\n          opacity: 0.3;\n        }\n      }\n\n      .app-jenkins-preview:nth-child(5) {\n        z-index: -1;\n        transform: rotateX(var(--masthead-rotation-5)) translateY(-100px) scale(0.6);\n        background-color: color-mix(in srgb, white 10%, transparent);\n\n        &::after {\n          opacity: 0.1;\n        }\n      }\n    }\n\n    .app-blog-image {\n      position: relative;\n      aspect-ratio: 1800 / 630;\n      margin: 0 0 1.5rem 0 !important;\n      border-radius: 10px;\n      overflow: hidden;\n      z-index: 0;\n      background-color: rgba(255, 255, 255, 0.5);\n\n      &::before {\n        content: \"\";\n        position: absolute;\n        inset: 0;\n        background-attachment: fixed;\n        background-color: var(--pink);\n        background-image: var(--aurora);\n        opacity: 0.35;\n        z-index: -1;\n      }\n\n      &::after {\n        content: \"\";\n        position: absolute;\n        inset: 0;\n        border: 1.5px solid color-mix(in srgb, var(--color) 5%, transparent);\n        border-radius: 10px;\n        z-index: 10;\n      }\n    }\n\n    .developer-exp {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      gap: 40px;\n\n      img {\n        width: 90px;\n        height: 90px;\n\n        &:nth-of-type(3) {\n          scale: 0.9;\n        }\n\n        &:nth-of-type(even) {\n          width: 40px;\n          height: 40px;\n          rotate: 45deg;\n          mix-blend-mode: overlay;\n        }\n      }\n    }\n</style>\n\n<div class=\"app-blog-image app-blog-image--masthead\">\n    <div class=\"app-jenkins-preview\"></div>\n    <div class=\"app-jenkins-preview\"></div>\n    <div class=\"app-jenkins-preview\"></div>\n    <div class=\"app-jenkins-preview\"></div>\n    <div class=\"app-jenkins-preview\"></div>\n</div>\n\n<script>\n(function () {\n  const startDeg = [-12, -9, -8, -7, -6];\n  const maxShift = -20;\n  const expFactor = 0.5;\n  const scrollSpeed = 0.004;\n  const maxDelay = 100; // max scroll delay in px for the first layer\n\n  const endDeg = startDeg.map(\n    (s, i) => +(s + maxShift * Math.pow(expFactor, i)).toFixed(2)\n  );\n\n  const delay = startDeg.map(\n    (_, i) => +(maxDelay * Math.pow(expFactor, i)).toFixed(2)\n  );\n\n  const diffs = startDeg.map((s, i) => Math.abs(endDeg[i] - s));\n  const maxDiff = Math.max(...diffs);\n  const lerp = (a, b, t) => a + (b - a) * t;\n\n  function updateVars() {\n    startDeg.forEach((start, i) => {\n      const effectiveScroll = Math.max(window.scrollY - delay[i], 0);\n      const base = effectiveScroll * scrollSpeed;\n      const t = Math.min(base * (maxDiff / diffs[i]), 1);\n      const rot = lerp(start, endDeg[i], t).toFixed(2);\n      document.body.style.setProperty(`--masthead-rotation-${i + 1}`, `${rot}deg`);\n    });\n  }\n\n  updateVars();\n  window.addEventListener('scroll', updateVars, { passive: true });\n})();\n</script>\n<div class=\"paragraph\">\n<p>In <a href=\"/blog/2025/03/26/design-post/\">Part One</a> we discussed the motivation behind redesigning Jenkins,\nthe most used CI/CD platform in the world, and the technical challenges that come with such an effort.</p>\n</div>\n<div class=\"paragraph\">\n<p>Today, we'll dive deeper into the design decisions behind some of the new UI features, how we're improving the developer\nexperience, and what we're doing to ensure compatibility across the plugin ecosystem without slowing down progress.</p>\n</div>\n<div class=\"sect1\">\n<h2 id=\"part-two-lift-off\"><a class=\"anchor\" href=\"#part-two-lift-off\"></a>Part Two - Lift-off</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>With Jenkins 2.516.1, we've reworked large amounts of the Jenkins user interface - the result of years of dedicated work\nby the community. This release marks a major milestone in the evolution of Jenkins, with nearly every part of the\ninterface having been refined for clarity and usability. From the navigation and theming to pipeline visualization\nand customization, the entire experience has been reimagined to better serve both new and old users.</p>\n</div>\n<hr>\n<div class=\"sect2\">\n<h3 id=\"refined-interface\"><a class=\"anchor\" href=\"#refined-interface\"></a>Refined interface</h3>\n<iframe width=\"100%\" height=\"500\" src=\"https://www.youtube.com/embed/xLbkNo-Pwac\" frameborder=\"0\" allowfullscreen></iframe>\n<div class=\"paragraph\">\n<p>One of the most noticeable changes in Jenkins 2.516.1 is the introduction of the redesigned header. This new header\nmerges the traditional top bar and breadcrumb navigation into a single, streamlined component. The result is a cleaner,\nmore modern interface that not only looks better but also improves usability by saving valuable vertical\nspace - approximately <em>60 pixels</em> per page.</p>\n</div>\n<div class=\"paragraph\">\n<p>Beyond its appearance, the new header is fully responsive. Breadcrumbs and actions dynamically adjust to different\nscreen sizes. Additionally, global actions like <em>Manage Jenkins</em>, which were previously only accessible from the\ndashboard, are now embedded directly into the header, making them accessible from any page.</p>\n</div>\n<div class=\"paragraph\">\n<p>Redesigning a platform as extensible as Jenkins means every change must be carefully considered for its impact on the\nplugin ecosystem. Throughout the ongoing redesign, maintaining compatibility with existing plugins has been prioritised.\nThis involved extensive testing, clear deprecation paths, and providing migration guides for plugin authors. The goal is\nto do as much heavy lifting for plugin developers as possible, so that only small tweaks would be needed by plugins.</p>\n</div>\n<div class=\"paragraph\">\n<p>Accessibility was a core focus of the redesign. We improved color contrast ratios across the interface, making Jenkins\neasier to use for everyone, including those with visual impairments. Interactive elements now have more contrast,\nand we’ve enhanced keyboard navigation throughout the UI.</p>\n</div>\n<div class=\"paragraph\">\n<p>We've also introduced new border variables that developers can use: <code>--jenkins-border</code> and <code>--jenkins-border—&#8203;subtle</code>.\nThese borders automatically change size and color depending on context, ensuring that they are always visible and\naccessible. When your system is set to increased contrast mode, borders automatically adapt - ensuring components\nremain visible and easy to distinguish throughout Jenkins.</p>\n</div>\n<hr>\n</div>\n<div class=\"sect2\">\n<h3 id=\"revamped-pipeline-visualisation\"><a class=\"anchor\" href=\"#revamped-pipeline-visualisation\"></a>Revamped pipeline visualisation</h3>\n<div class=\"app-blog-image\">\n    <img src=\"/images/post-images/2025/07/24/pipeline-graph-view.png\" alt=\"Pipeline Graph View plugin\" />\n</div>\n<div class=\"paragraph\">\n<p>Pipelines are central to how Jenkins automates the process of building, testing, and deploying software. They outline\nthe entire workflow from code commit to production. As these pipelines become more complex, it can be challenging to\ntrack progress or identify issues. This is where pipeline visualization becomes essential - turning a series of\nabstract steps into a clear, interactive flow.</p>\n</div>\n<div class=\"paragraph\">\n<p>The plugin:pipeline-graph-view[Pipeline Graph View] plugin does just that, displaying each\nstage of a run in a clean, intuitive graph. It's designed to help users quickly grasp the structure and status of their\npipelines at a glance.</p>\n</div>\n<div class=\"paragraph\">\n<p>This year, the plugin has been completely rebuilt, and the response from the community has been <em>fantastic</em>. We've moved\nthe plugin from Webpack to Rspack and Vite, and replaced class components with functional ones. This cleanup removed\nthousands of lines of code, improving performance and maintainability.</p>\n</div>\n<div class=\"paragraph\">\n<p>The new interface, based on the <a href=\"https://weekly.ci.jenkins.io/design-library/\">Jenkins Design Library</a>, now supports\nfull-page scrolling, sticky headings, and pan-and-zoom capabilities for the pipeline graph. New animations, loading\nskeletons, and clear stage progress indicators create a smoother, more responsive user experience.</p>\n</div>\n<div class=\"paragraph\">\n<p>A unified view brings together the pipeline graph, stage details, and logs into a single layout, so you can now track\nexecution and output in one place. The layout is customizable - the graph can be moved and columns resized or hidden.</p>\n</div>\n<div class=\"paragraph\">\n<p>Finally, performance has been significantly boosted. The plugin loads faster, scrolls more smoothly, and\nhandles large pipelines more efficiently than ever before.</p>\n</div>\n<div class=\"paragraph\">\n<p>Want to learn more about Pipeline Graph View? Read our <a href=\"/blog/2025/05/02/pipeline-graph-view/\">previous article</a>.</p>\n</div>\n<hr>\n</div>\n<div class=\"sect2\">\n<h3 id=\"new-ways-to-customize-jenkins\"><a class=\"anchor\" href=\"#new-ways-to-customize-jenkins\"></a>New ways to customize Jenkins</h3>\n<div class=\"app-blog-image\">\n    <img src=\"/images/post-images/2025/07/24/themes.png\" alt=\"Themes\" />\n</div>\n<div class=\"paragraph\">\n<p>Jenkins 2.516.1 is the most customizable version of Jenkins yet. There's more themes than ever before, and a whole new\nway of changing themes on the fly. Just hover over your user account icon to get access to the new theme picker.</p>\n</div>\n<div class=\"paragraph\">\n<p>Make Jenkins your own with a variety of themes:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>plugin:dark-theme[Dark theme] - A sleek, modern look that's easy on the eyes.</p>\n</li>\n<li>\n<p>plugin:solarized-theme[Solarized theme] - Ethan Schoonover's beloved, balanced theme returns\nwith a fresh release for Jenkins.</p>\n</li>\n<li>\n<p>plugin:catppuccin-theme[Catppuccin theme] - A soothing pastel theme for Jenkins.</p>\n</li>\n<li>\n<p>plugin:chocolate-theme[Chocolate theme] - Indulge your Jenkins in rich, dark tones with\ngolden highlights for a refined and elegant developer experience.</p>\n</li>\n<li>\n<p>plugin:nord-theme[Nord theme] - A clear, uncluttered, and elegant design\nto achieve undisturbed focus and excellent readability.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Want to create your own theme? We've made it simple with a brand-new Maven archetype –\n<a href=\"https://github.com/jenkinsci/archetypes\">check it out</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>On top of that, there's the plugin:customizable-header[Customizable Header Plugin]. This\nlets you fully customize the new header - change the logo, links, or actions to tailor Jenkins to your organization's\nworkflow and brand.</p>\n</div>\n<hr>\n</div>\n<div class=\"sect2\">\n<h3 id=\"evolving-the-developer-experience\"><a class=\"anchor\" href=\"#evolving-the-developer-experience\"></a>Evolving the developer experience</h3>\n<div class=\"app-blog-image developer-exp\">\n    <img src=\"/images/logos/jenkins/jenkins.svg\" alt=\"Jenkins logo\" />\n    <img src=\"/images/post-images/2025/07/24/plus.svg\" alt=\"Plus\" />\n    <img src=\"/images/post-images/2025/07/24/design-library.svg\" alt=\"Jenkins Design Library icon\" />\n    <img src=\"/images/post-images/2025/07/24/plus.svg\" alt=\"Plus\" />\n    <img src=\"/images/post-images/2025/07/24/intellij.png\" alt=\"IntelliJ icon\" />\n</div>\n<div class=\"paragraph\">\n<p>Jenkins is powered by hundreds of contributors, but working with its proprietary technologies – particularly Jelly and\nStapler – can be a challenge for newcomers.</p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"jenkins-design-library\"><a class=\"anchor\" href=\"#jenkins-design-library\"></a>Jenkins Design Library</h4>\n<div class=\"paragraph\">\n<p>At the end of last year, <a href=\"https://weekly.ci.jenkins.io/design-library/\">Jenkins Design Library 3</a> was\nintroduced - a major step forward in modernizing the Jenkins UI and improving the development experience. Jenkins Design\nLibrary is a comprehensive system of reusable UI components, layout patterns, and style guidelines tailored\nspecifically for Jenkins. It standardizes how interfaces are built, ensuring consistency across plugins and core\nfeatures while aligning with modern web practices and accessibility standards.</p>\n</div>\n<div class=\"paragraph\">\n<p>For contributors, this means a more efficient and reliable way to build user interfaces. Instead of\ncreating components from scratch or reverse-engineering existing ones, contributors can rely on a shared set of\nwell-documented, pre-tested elements. This not only speeds up development and reduces bugs, but also makes it easier\nfor new contributors to get started and follow established UI conventions.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"plugin-for-intellij\"><a class=\"anchor\" href=\"#plugin-for-intellij\"></a>Plugin for IntelliJ</h4>\n<div class=\"paragraph\">\n<p>To help lower the barrier to entry, the Jenkins community offers an\n<a href=\"https://plugins.jetbrains.com/plugin/1885-jenkins-development-support\">IntelliJ IDEA plugin</a>. The plugin streamlines\nJenkins development in various ways, such as offering autocompletion and inline documentation for Jelly tags, as well as\nautocomplete for <a href=\"https://weekly.ci.jenkins.io/design-library/symbols/\">Jenkins Symbols</a>.</p>\n</div>\n<hr>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"get-involved\"><a class=\"anchor\" href=\"#get-involved\"></a>Get involved</h3>\n<div class=\"paragraph\">\n<p>Jenkins has come a long way in the last few years, and we're incredibly excited for what the future holds.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you want to get involved in the UI and UX discussions of Jenkins join the <a href=\"/sigs/ux\">User Experience SIG</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Take advantage of new components and patterns in your plugin via the <a href=\"https://weekly.ci.jenkins.io/design-library/\">Design Library</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>You can watch our monthly meetings on <a href=\"https://www.youtube.com/playlist?list=PLN7ajX_VdyaOnsIIsZHsv_fM9QhOcajWe\">YouTube</a> and you can view in-progress work on <a href=\"https://github.com/jenkinsci/jenkins/pulls?q=is%3Apr+is%3Aopen+label%3Aweb-ui\">GitHub</a>.</p>\n</div>\n</div>\n</div>\n</div>"
}