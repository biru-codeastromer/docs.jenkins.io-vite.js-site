{
  "title": "Jenkins Security Advisory 2018-03-26",
  "date": "2018-03-26",
  "url": "/security/advisory/2018-03-26/",
  "kind": "plugins",
  "core": null,
  "issues": [
    {
      "id": "SECURITY-261",
      "reporter": "Steve Marlowe &lt;smarlowe@cisco.com&gt; of Cisco ASIG",
      "title": "GitHub Pull Request Builder Plugin stores GitHub access tokens in build.xml",
      "cve": "CVE-2018-1000142",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "GitHub Pull Request Builder Plugin stored serialized objects in `build.xml` files that contained the credential used to poll Jenkins.\nThis can be used by users with Jenkins controller file system access to obtain GitHub credentials.\n\nSince 1.40.0, the plugin no longer stores serialized objects containing the credential on disk.\n\nBuilds started before the plugin was updated to 1.40.0 will retain the encoded credentials on disk.\nWe strongly recommend revoking old GitHub credentials used in Jenkins.\nWe're providing https://github.com/jenkinsci-cert/SECURITY-261[a script for use in the Script Console that will attempt to remove old stored credentials from build.xml files].\n",
      "plugins": [
        {
          "name": "ghprb",
          "title": "GitHub Pull Request Builder",
          "previous": "1.39.0",
          "fixed": "1.40.0"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>GitHub Pull Request Builder Plugin stored serialized objects in <code>build.xml</code> files that contained the credential used to poll Jenkins.\nThis can be used by users with Jenkins controller file system access to obtain GitHub credentials.</p>\n</div>\n<div class=\"paragraph\">\n<p>Since 1.40.0, the plugin no longer stores serialized objects containing the credential on disk.</p>\n</div>\n<div class=\"paragraph\">\n<p>Builds started before the plugin was updated to 1.40.0 will retain the encoded credentials on disk.\nWe strongly recommend revoking old GitHub credentials used in Jenkins.\nWe&#8217;re providing <a href=\"https://github.com/jenkinsci-cert/SECURITY-261\">a script for use in the Script Console that will attempt to remove old stored credentials from build.xml files</a>.</p>\n</div>"
    },
    {
      "id": "SECURITY-262",
      "reporter": "Steve Marlowe &lt;smarlowe@cisco.com&gt; of Cisco ASIG",
      "title": "GitHub Pull Request Builder Plugin stores webhook secret in plain text",
      "cve": "CVE-2018-1000143",
      "cvss": {
        "severity": "low",
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "GitHub Pull Request Builder Plugin stored the webhook secret shared between Jenkins and GitHub in plain text.\n\nThis allowed users with Jenkins controller local file system access and Jenkins administrators to retrieve the stored password.\nThe latter could result in exposure of the passwords through browser extensions, cross-site scripting vulnerabilities, and similar situations.\n\nGitHub Pull Request Builder Plugin 1.32.1 and newer stores the webhook secret encrypted on disk.\n",
      "plugins": [],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>GitHub Pull Request Builder Plugin stored the webhook secret shared between Jenkins and GitHub in plain text.</p>\n</div>\n<div class=\"paragraph\">\n<p>This allowed users with Jenkins controller local file system access and Jenkins administrators to retrieve the stored password.\nThe latter could result in exposure of the passwords through browser extensions, cross-site scripting vulnerabilities, and similar situations.</p>\n</div>\n<div class=\"paragraph\">\n<p>GitHub Pull Request Builder Plugin 1.32.1 and newer stores the webhook secret encrypted on disk.</p>\n</div>"
    },
    {
      "id": "SECURITY-308",
      "reporter": "Daniel Beck, CloudBees, Inc.",
      "title": "Cucumber Living Documentation Plugin disabled Content-Security-Policy for archived and workspace files",
      "cve": "CVE-2018-1000144",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:L/A:N"
      },
      "description_adoc": "Jenkins 1.641 and 1.625.3 introduced `Content-Security-Policy` HTTP headers as protection against Cross-Site Scripting attacks using workspace files and archived artifacts served using `DirectoryBrowserSupport` (link:/security/advisory/2015-12-09/[SECURITY-95]).\n\nCucumber Living Documentation Plugin disabled this XSS protection until Jenkins was restarted whenever a Cucumber Report was viewed by any user to work around the `Content-Security-Policy` limitations.\n\nWhile disabling this protection mechanism temporarily may be necessary to make plugins work that haven't been adapted to work with the Content-Security-Policy restriction, this should only be done by administrators, as doing so may result in a security issue (see link:/doc/book/security/configuring-content-security-policy[Configuring Content Security Policy]).\n\nThis has been addressed in version 1.1.0 of the plugin, and it will now request that users change the Content-Security-Policy option in Jenkins.\n",
      "plugins": [
        {
          "name": "cucumber-living-documentation",
          "title": "Cucumber Living Documentation",
          "previous": "1.0.12",
          "fixed": "1.1.0"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Jenkins 1.641 and 1.625.3 introduced <code>Content-Security-Policy</code> HTTP headers as protection against Cross-Site Scripting attacks using workspace files and archived artifacts served using <code>DirectoryBrowserSupport</code> (<a href=\"/security/advisory/2015-12-09/\">SECURITY-95</a>).</p>\n</div>\n<div class=\"paragraph\">\n<p>Cucumber Living Documentation Plugin disabled this XSS protection until Jenkins was restarted whenever a Cucumber Report was viewed by any user to work around the <code>Content-Security-Policy</code> limitations.</p>\n</div>\n<div class=\"paragraph\">\n<p>While disabling this protection mechanism temporarily may be necessary to make plugins work that haven&#8217;t been adapted to work with the Content-Security-Policy restriction, this should only be done by administrators, as doing so may result in a security issue (see <a href=\"/doc/book/security/configuring-content-security-policy\">Configuring Content Security Policy</a>).</p>\n</div>\n<div class=\"paragraph\">\n<p>This has been addressed in version 1.1.0 of the plugin, and it will now request that users change the Content-Security-Policy option in Jenkins.</p>\n</div>"
    },
    {
      "id": "SECURITY-373",
      "reporter": "Steve Marlowe &lt;smarlowe@cisco.com&gt; of Cisco ASIG",
      "title": "Perforce Plugin uses ineffective credentials encryption",
      "cve": "CVE-2018-1000145",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "Perforce Plugin encrypts its credentials using DES and an encryption key stored in its public source code, so it only serves as basic obfuscation.\nThis allowed users with Jenkins controller local file system access and Jenkins administrators to retrieve the stored password.\nThe latter could result in exposure of the passwords through browser extensions, cross-site scripting vulnerabilities, and similar situations.\n\nAs of publication of this advisory, there is no fix.\nThe plugin has been removed from publication at the request of its former maintainers.\nWe recommend that users of Perforce Plugin use the plugin:p4[P4 Plugin] instead.\n",
      "plugins": [
        {
          "name": "perforce",
          "title": "Perforce",
          "previous": "1.3.36",
          "fixed": null
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Perforce Plugin encrypts its credentials using DES and an encryption key stored in its public source code, so it only serves as basic obfuscation.\nThis allowed users with Jenkins controller local file system access and Jenkins administrators to retrieve the stored password.\nThe latter could result in exposure of the passwords through browser extensions, cross-site scripting vulnerabilities, and similar situations.</p>\n</div>\n<div class=\"paragraph\">\n<p>As of publication of this advisory, there is no fix.\nThe plugin has been removed from publication at the request of its former maintainers.\nWe recommend that users of Perforce Plugin use the plugin:p4[P4 Plugin] instead.</p>\n</div>"
    },
    {
      "id": "SECURITY-504",
      "reporter": "Peter Adkins",
      "title": "vSphere Plugin does not validate SSL/TLS certificates",
      "cve": "CVE-2018-1000151",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
      },
      "description_adoc": "vSphere Plugin disabled SSL/TLS certificate validation unconditionally, allowing potential man-in-the-middle attacks.\n\nvSphere Plugin 2.17 now has SSL/TLS certificate validation enabled by default.\n",
      "plugins": [
        {
          "name": "vsphere-cloud",
          "title": "vSphere",
          "previous": 2.16,
          "fixed": 2.17
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>vSphere Plugin disabled SSL/TLS certificate validation unconditionally, allowing potential man-in-the-middle attacks.</p>\n</div>\n<div class=\"paragraph\">\n<p>vSphere Plugin 2.17 now has SSL/TLS certificate validation enabled by default.</p>\n</div>"
    },
    {
      "id": "SECURITY-745",
      "reporter": "Daniel Beck, CloudBees, Inc.",
      "title": "CSRF vulnerability and missing permission checks in vSphere Plugin form validation allowed enumerating credentials IDs, capturing credentials, and denial of service",
      "cve": "CVE-2018-1000152 and CVE-2018-1000153",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"
      },
      "description_adoc": "vSphere Plugin did not perform permission checks on methods implementing form validation.\nThis allowed users with Overall/Read access to Jenkins to perform various actions such as:\n\n* Connect to an attacker-specified vSphere server using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins\n* Connect to configured vSphere servers and looking up information, potentially resulting in denial of service\n\nAdditionally, these form validation methods did not require POST requests, resulting in a CSRF vulnerability.\n\nThese form validation methods now require POST requests and appropriate user permissions.\n",
      "plugins": [
        {
          "name": "vsphere-cloud",
          "title": "vSphere",
          "previous": 2.16,
          "fixed": 2.17
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>vSphere Plugin did not perform permission checks on methods implementing form validation.\nThis allowed users with Overall/Read access to Jenkins to perform various actions such as:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Connect to an attacker-specified vSphere server using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins</p>\n</li>\n<li>\n<p>Connect to configured vSphere servers and looking up information, potentially resulting in denial of service</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Additionally, these form validation methods did not require POST requests, resulting in a CSRF vulnerability.</p>\n</div>\n<div class=\"paragraph\">\n<p>These form validation methods now require POST requests and appropriate user permissions.</p>\n</div>"
    },
    {
      "id": "SECURITY-519",
      "reporter": "Yoann Dubreuil, CloudBees, Inc.",
      "title": "Liquibase Runner Plugin allows users to load arbitrary Java code into controller JVM",
      "cve": "CVE-2018-1000146",
      "cvss": {
        "severity": "high",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "description_adoc": "Liquibase Runner Plugin allows users with Job/Configure permission to configure its build step in a way that loads arbitrary class files into the Jenkins controller JVM, resulting in arbitrary code execution.\n\nAs of publication of this advisory, there is no fix.\n",
      "plugins": [
        {
          "name": "liquibase-runner",
          "title": "Liquibase Runner",
          "previous": "1.3.0",
          "fixed": null
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Liquibase Runner Plugin allows users with Job/Configure permission to configure its build step in a way that loads arbitrary class files into the Jenkins controller JVM, resulting in arbitrary code execution.</p>\n</div>\n<div class=\"paragraph\">\n<p>As of publication of this advisory, there is no fix.</p>\n</div>"
    },
    {
      "id": "SECURITY-536",
      "reporter": "Oleg Nenashev, CloudBees, Inc.",
      "title": "Perforce Plugin credentials can be obtained by users with Job/Extended Read permission",
      "cve": "CVE-2018-1000147",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "Jenkins prevents users with Extended Read permission from obtaining secrets such as credentials stored in job configurations.\n\nPerforce Plugin implements its own credential encryption using DES and an encryption key stored in its public source code.\nThis is not considered a secret by Jenkins, resulting in potential exposure of Perforce credentials stored in job configurations to users with Extended Read permission.\nWhile these are encrypted, this can only be considered basic obfuscation due to the hard-coded public encryption key used.\n\nAs of publication of this advisory, there is no fix.\nThe plugin has been removed from publication at the request of its maintainers.\nWe recommend that users of Perforce Plugin use the plugin:p4[P4 Plugin] instead.\n",
      "plugins": [
        {
          "name": "perforce",
          "title": "Perforce",
          "previous": "1.3.36",
          "fixed": null
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Jenkins prevents users with Extended Read permission from obtaining secrets such as credentials stored in job configurations.</p>\n</div>\n<div class=\"paragraph\">\n<p>Perforce Plugin implements its own credential encryption using DES and an encryption key stored in its public source code.\nThis is not considered a secret by Jenkins, resulting in potential exposure of Perforce credentials stored in job configurations to users with Extended Read permission.\nWhile these are encrypted, this can only be considered basic obfuscation due to the hard-coded public encryption key used.</p>\n</div>\n<div class=\"paragraph\">\n<p>As of publication of this advisory, there is no fix.\nThe plugin has been removed from publication at the request of its maintainers.\nWe recommend that users of Perforce Plugin use the plugin:p4[P4 Plugin] instead.</p>\n</div>"
    },
    {
      "id": "SECURITY-545",
      "reporter": "Jesse Glick, CloudBees, Inc.",
      "title": "Copy To Slave Plugin allows access to arbitrary files on the Jenkins controller file system",
      "cve": "CVE-2018-1000148",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
      },
      "description_adoc": "Copy To Slave Plugin allows users with Job/Configure permissions to configure it in such a way that it allows obtaining arbitrary files accessible to the Jenkins controller process from the Jenkins controller file system.\n\nAs of publication of this advisory, there is no fix.\n",
      "plugins": [
        {
          "name": "copy-to-slave",
          "title": "Copy To Slave",
          "previous": "1.4.4",
          "fixed": null
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Copy To Slave Plugin allows users with Job/Configure permissions to configure it in such a way that it allows obtaining arbitrary files accessible to the Jenkins controller process from the Jenkins controller file system.</p>\n</div>\n<div class=\"paragraph\">\n<p>As of publication of this advisory, there is no fix.</p>\n</div>"
    },
    {
      "id": "SECURITY-630",
      "reporter": "Daniel Beck, CloudBees, Inc.",
      "title": "Ansible Plugin disabled host key verification by default",
      "cve": "CVE-2018-1000149",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
      },
      "description_adoc": "Ansible Plugin disabled host key verification by default, having it only as an opt-in option.\n\nAnsible Plugin 1.0 now enables host key verification by default, adding options allowing users to opt out.\n\nExisting configurations that previously did not opt into host key verification will have host key verification enabled after update, possibly resulting in failures.\n",
      "plugins": [
        {
          "name": "ansible",
          "title": "Ansible",
          "previous": 0.8,
          "fixed": "1.0"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Ansible Plugin disabled host key verification by default, having it only as an opt-in option.</p>\n</div>\n<div class=\"paragraph\">\n<p>Ansible Plugin 1.0 now enables host key verification by default, adding options allowing users to opt out.</p>\n</div>\n<div class=\"paragraph\">\n<p>Existing configurations that previously did not opt into host key verification will have host key verification enabled after update, possibly resulting in failures.</p>\n</div>"
    },
    {
      "id": "SECURITY-736",
      "reporter": "Oleg Nenashev, CloudBees, Inc.",
      "title": "Reverse Proxy Auth persisted authorities cache on disk",
      "cve": "CVE-2018-1000150",
      "cvss": {
        "severity": "low",
        "vector": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "Reverse Proxy Auth Plugin persisted a cache of granted authorities (group memberships) on disk.\n\nThis could allow users with local Jenkins controller file system access to obtain group membership information of Jenkins users.\n\nReverse Proxy Auth Plugin 1.6.0 and newer no longer store the cache of granted authorities on disk.\n",
      "plugins": [
        {
          "name": "reverse-proxy-auth-plugin",
          "title": "Reverse Proxy Auth",
          "previous": 1.5,
          "fixed": "1.6.0"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Reverse Proxy Auth Plugin persisted a cache of granted authorities (group memberships) on disk.</p>\n</div>\n<div class=\"paragraph\">\n<p>This could allow users with local Jenkins controller file system access to obtain group membership information of Jenkins users.</p>\n</div>\n<div class=\"paragraph\">\n<p>Reverse Proxy Auth Plugin 1.6.0 and newer no longer store the cache of granted authorities on disk.</p>\n</div>"
    },
    {
      "id": "SECURITY-774",
      "reporter": "Hyoungwook Jang, SKinfosec, Inc.",
      "title": "Mailer Plugin allowed unauthorized users to send test emails",
      "cve": "CVE-2018-8718",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"
      },
      "description_adoc": "A missing permission check in Mailer Plugin allowed users with Overall/Read access to Jenkins to have it connect to a user-specified mail server with user-specified credentials to send a test email to a user-specified email address.\nThe email subject and body could not be changed.\nThis could result in DoS if, for example, specifying a valid mail server but invalid credentials.\n\nAs the same URL did not require POST to be used, it also was vulnerable to cross-site request forgery.\n\nThe URL handling test emails now requires POST to protect from CSRF, and performs an Overall/Administer permission check.\n",
      "plugins": [
        {
          "name": "mailer",
          "title": "Mailer",
          "previous": "1.20",
          "fixed": 1.21
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>A missing permission check in Mailer Plugin allowed users with Overall/Read access to Jenkins to have it connect to a user-specified mail server with user-specified credentials to send a test email to a user-specified email address.\nThe email subject and body could not be changed.\nThis could result in DoS if, for example, specifying a valid mail server but invalid credentials.</p>\n</div>\n<div class=\"paragraph\">\n<p>As the same URL did not require POST to be used, it also was vulnerable to cross-site request forgery.</p>\n</div>\n<div class=\"paragraph\">\n<p>The URL handling test emails now requires POST to protect from CSRF, and performs an Overall/Administer permission check.</p>\n</div>"
    }
  ],
  "components": [],
  "index_details_html": null,
  "content_html": null
}