{
  "title": "Jenkins Security Advisory 2018-07-18",
  "date": "2018-07-18",
  "url": "/security/advisory/2018-07-18/",
  "kind": "core",
  "core": {
    "lts": {
      "previous": "2.121.1",
      "fixed": "2.121.2"
    },
    "weekly": {
      "previous": 2.132,
      "fixed": 2.133
    }
  },
  "issues": [
    {
      "id": "SECURITY-897",
      "reporter": "Nimrod Stoler of CyberArk Labs",
      "title": "Users without Overall/Read permission can have Jenkins reset parts of global configuration on the next restart",
      "cve": "CVE-2018-1999001",
      "cvss": {
        "severity": "high",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
      },
      "description_adoc": "Unauthenticated users could provide maliciously crafted login credentials that cause Jenkins to move the `config.xml` file from the Jenkins home directory.\nThis configuration file contains basic configuration of Jenkins, including the selected security realm and authorization strategy.\nIf Jenkins is started without this file present, it will revert to the legacy defaults of granting administrator access to anonymous users.\n\nThe fix prevents this behavior.\n\nTo mitigate this problem, we strongly advise that administrators of Jenkins instances without this fix, that are reachable by untrusted users, save the global configuration shortly before shutting down Jenkins.\nDoing so will write the current configuration from memory to the config.xml file, which is only read on startup or when reloading configuration.\n\nIf Jenkins has already been shut down after this issue has been exploited, the `config.xml` file can be found at `users/$002e$002e/config.xml` in the Jenkins home directory.\n\nThis issue was caused by the fix for link:/security/advisory/2017-11-08/#SECURITY-499[SECURITY-499 in the 2017-11-08 security advisory].\n",
      "plugins": [],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Unauthenticated users could provide maliciously crafted login credentials that cause Jenkins to move the <code>config.xml</code> file from the Jenkins home directory.\nThis configuration file contains basic configuration of Jenkins, including the selected security realm and authorization strategy.\nIf Jenkins is started without this file present, it will revert to the legacy defaults of granting administrator access to anonymous users.</p>\n</div>\n<div class=\"paragraph\">\n<p>The fix prevents this behavior.</p>\n</div>\n<div class=\"paragraph\">\n<p>To mitigate this problem, we strongly advise that administrators of Jenkins instances without this fix, that are reachable by untrusted users, save the global configuration shortly before shutting down Jenkins.\nDoing so will write the current configuration from memory to the config.xml file, which is only read on startup or when reloading configuration.</p>\n</div>\n<div class=\"paragraph\">\n<p>If Jenkins has already been shut down after this issue has been exploited, the <code>config.xml</code> file can be found at <code>users/$002e$002e/config.xml</code> in the Jenkins home directory.</p>\n</div>\n<div class=\"paragraph\">\n<p>This issue was caused by the fix for <a href=\"/security/advisory/2017-11-08/#SECURITY-499\">SECURITY-499 in the 2017-11-08 security advisory</a>.</p>\n</div>"
    },
    {
      "id": "SECURITY-914",
      "reporter": "Orange Tsai(@orange_8361) from DEVCORE",
      "title": "Arbitrary file read vulnerability",
      "cve": "CVE-2018-1999002",
      "cvss": {
        "severity": "high",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
      },
      "description_adoc": "An arbitrary file read vulnerability in the Stapler web framework used by Jenkins allowed unauthenticated users to send crafted HTTP requests returning the contents of any file on the Jenkins controller file system that the Jenkins controller process has access to.\n\nInput validation in Stapler has been improved to prevent this.\n",
      "plugins": [],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>An arbitrary file read vulnerability in the Stapler web framework used by Jenkins allowed unauthenticated users to send crafted HTTP requests returning the contents of any file on the Jenkins controller file system that the Jenkins controller process has access to.</p>\n</div>\n<div class=\"paragraph\">\n<p>Input validation in Stapler has been improved to prevent this.</p>\n</div>"
    },
    {
      "id": "SECURITY-891",
      "reporter": "Nimrod Stoler of CyberArk Labs",
      "title": "Unauthorized users could cancel queued builds",
      "cve": "CVE-2018-1999003",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"
      },
      "description_adoc": "The URLs handling cancellation of queued builds did not perform a permission check, allowing users with Overall/Read permission to cancel queued builds.\n\nThe URLs handling cancellation of queued builds now ensure that the user has the Item/Cancel permission.\n",
      "plugins": [],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>The URLs handling cancellation of queued builds did not perform a permission check, allowing users with Overall/Read permission to cancel queued builds.</p>\n</div>\n<div class=\"paragraph\">\n<p>The URLs handling cancellation of queued builds now ensure that the user has the Item/Cancel permission.</p>\n</div>"
    },
    {
      "id": "SECURITY-892",
      "reporter": "Nimrod Stoler of CyberArk Labs",
      "title": "Unauthorized users could initiate and abort agent launches",
      "cve": "CVE-2018-1999004",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"
      },
      "description_adoc": "The URL that initiates agent launches on the Jenkins controller did not perform a permission check, allowing users with Overall/Read permission to initiate agent launches.\n\nDoing so canceled all ongoing launches for the specified agent, so this allowed attackers to prevent an agent from launching indefinitely.\n\nThe URL for agent launches now ensures that the user has the Agent/Connect permission.\n",
      "plugins": [],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>The URL that initiates agent launches on the Jenkins controller did not perform a permission check, allowing users with Overall/Read permission to initiate agent launches.</p>\n</div>\n<div class=\"paragraph\">\n<p>Doing so canceled all ongoing launches for the specified agent, so this allowed attackers to prevent an agent from launching indefinitely.</p>\n</div>\n<div class=\"paragraph\">\n<p>The URL for agent launches now ensures that the user has the Agent/Connect permission.</p>\n</div>"
    },
    {
      "id": "SECURITY-944",
      "reporter": "AZZAZ Yasmine, IT Security Engineer",
      "title": "Stored XSS vulnerability",
      "cve": "CVE-2018-1999005",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N"
      },
      "description_adoc": "The build timeline widget shown on URLs like `/view/…/builds` did not properly escape display names of items.\nThis resulted in a cross-site scripting vulnerability exploitable by users able to control item display names.\n\nJenkins now escapes job display names shown on the timeline widget.\n",
      "plugins": [],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>The build timeline widget shown on URLs like <code>/view/…/builds</code> did not properly escape display names of items.\nThis resulted in a cross-site scripting vulnerability exploitable by users able to control item display names.</p>\n</div>\n<div class=\"paragraph\">\n<p>Jenkins now escapes job display names shown on the timeline widget.</p>\n</div>"
    },
    {
      "id": "SECURITY-925",
      "reporter": "Daniel Beck, CloudBees, Inc.",
      "title": "Unauthorized users are able to determine when a plugin was extracted from its JPI package",
      "cve": "CVE-2018-1999006",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "Files indicating when a plugin JPI file was last extracted into a subdirectory of `plugins/` in the Jenkins home directory were accessible via HTTP by users with Overall/Read permission.\nThis allowed unauthorized users to determine the likely install date of a given plugin.\n\nThe affected files are no longer available via HTTP.\n",
      "plugins": [],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Files indicating when a plugin JPI file was last extracted into a subdirectory of <code>plugins/</code> in the Jenkins home directory were accessible via HTTP by users with Overall/Read permission.\nThis allowed unauthorized users to determine the likely install date of a given plugin.</p>\n</div>\n<div class=\"paragraph\">\n<p>The affected files are no longer available via HTTP.</p>\n</div>"
    },
    {
      "id": "SECURITY-390",
      "reporter": "Daniel Beck, CloudBees, Inc.",
      "title": "XSS vulnerability in Stapler debug mode",
      "cve": "CVE-2018-1999007",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N"
      },
      "description_adoc": "Stapler is the web framework used by Jenkins to route HTTP requests.\nWhen its debug mode is enabled, HTTP 404 error pages display diagnostic information.\nThose error pages did not escape parts of URLs they displayed, in rare cases resulting in a cross-site scripting vulnerability.\n\nParts of URLs displayed on these error pages are now properly escaped.\n\nAs a workaround, Stapler debug mode should not be enabled on instances accessible to untrusted users.\n",
      "plugins": [],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Stapler is the web framework used by Jenkins to route HTTP requests.\nWhen its debug mode is enabled, HTTP 404 error pages display diagnostic information.\nThose error pages did not escape parts of URLs they displayed, in rare cases resulting in a cross-site scripting vulnerability.</p>\n</div>\n<div class=\"paragraph\">\n<p>Parts of URLs displayed on these error pages are now properly escaped.</p>\n</div>\n<div class=\"paragraph\">\n<p>As a workaround, Stapler debug mode should not be enabled on instances accessible to untrusted users.</p>\n</div>"
    }
  ],
  "components": [],
  "index_details_html": null,
  "content_html": null
}