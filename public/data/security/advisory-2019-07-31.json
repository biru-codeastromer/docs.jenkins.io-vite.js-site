{
  "title": "Jenkins Security Advisory 2019-07-31",
  "date": "2019-07-31",
  "url": "/security/advisory/2019-07-31/",
  "kind": "plugins",
  "core": null,
  "issues": [
    {
      "id": "SECURITY-1465 (1)",
      "reporter": null,
      "title": "Sandbox bypass through type casts in PLUGIN_NAME",
      "cve": "CVE-2019-10355",
      "cvss": {
        "severity": "High",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "description_adoc": "Sandbox protection in PLUGIN_NAME could be circumvented by casting crafted objects to other types.\nThis allowed attackers able to specify sandboxed scripts to invoke constructors that weren't approved.\n\nAdditionally, this could be used to read arbitrary files on the Jenkins controller.\n\nCasting collections to other types as an alternative syntax for constructor invocation is now only allowed when the collection type is defined in `java.util`, and prohibited otherwise.\nCasting files and enums to arrays is now intercepted by the sandbox and treated as the invocation of an equivalent method.",
      "plugins": [
        {
          "name": "script-security",
          "title": "Script Security",
          "previous": 1.61,
          "fixed": 1.62
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Sandbox protection in Script Security Plugin could be circumvented by casting crafted objects to other types.\nThis allowed attackers able to specify sandboxed scripts to invoke constructors that weren&#8217;t approved.</p>\n</div>\n<div class=\"paragraph\">\n<p>Additionally, this could be used to read arbitrary files on the Jenkins controller.</p>\n</div>\n<div class=\"paragraph\">\n<p>Casting collections to other types as an alternative syntax for constructor invocation is now only allowed when the collection type is defined in <code>java.util</code>, and prohibited otherwise.\nCasting files and enums to arrays is now intercepted by the sandbox and treated as the invocation of an equivalent method.</p>\n</div>"
    },
    {
      "id": "SECURITY-1465 (2)",
      "reporter": null,
      "title": "Sandbox bypass through method pointer expressions in PLUGIN_NAME",
      "cve": "CVE-2019-10356",
      "cvss": {
        "severity": "High",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "description_adoc": "Sandbox protection in PLUGIN_NAME could be circumvented through crafted subexpressions used as arguments to method pointer expressions.\nThis allowed attackers able to specify sandboxed scripts to execute arbitrary code in the context of the Jenkins controller JVM.\n\nMethod pointer subexpressions are now subject to sandbox protection.",
      "plugins": [
        {
          "name": "script-security",
          "title": "Script Security",
          "previous": 1.61,
          "fixed": 1.62
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Sandbox protection in Script Security Plugin could be circumvented through crafted subexpressions used as arguments to method pointer expressions.\nThis allowed attackers able to specify sandboxed scripts to execute arbitrary code in the context of the Jenkins controller JVM.</p>\n</div>\n<div class=\"paragraph\">\n<p>Method pointer subexpressions are now subject to sandbox protection.</p>\n</div>"
    },
    {
      "id": "SECURITY-1422",
      "reporter": "Alex Earl (@alexcearl), Marvell Semiconductor, Inc., and Daniel Beck, CloudBees, Inc.",
      "title": "Missing permission check in PLUGIN_NAME",
      "cve": "CVE-2019-10357",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "PLUGIN_NAME provides form validation to determine whether the revision (e.g. commit, tag, or branch name) specified for a global library exists in the repository.\nThis form validation method lacked a permission check, allowing attackers with Overall/Read access to determine whether an attacker-specified revision exists in an SCM repository configured for use in an existing shared library.\n\nPLUGIN_NAME now performs the appropriate permission check.",
      "plugins": [
        {
          "name": "workflow-cps-global-lib",
          "title": "Pipeline: Deprecated Groovy Libraries",
          "previous": 2.14,
          "fixed": 2.15
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Pipeline: Deprecated Groovy Libraries Plugin provides form validation to determine whether the revision (e.g. commit, tag, or branch name) specified for a global library exists in the repository.\nThis form validation method lacked a permission check, allowing attackers with Overall/Read access to determine whether an attacker-specified revision exists in an SCM repository configured for use in an existing shared library.</p>\n</div>\n<div class=\"paragraph\">\n<p>Pipeline: Deprecated Groovy Libraries Plugin now performs the appropriate permission check.</p>\n</div>"
    },
    {
      "id": "SECURITY-713",
      "reporter": "Jesse Glick, CloudBees, Inc.",
      "title": "PLUGIN_NAME did not mask sensitive values in module build logs",
      "cve": "CVE-2019-10358",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N"
      },
      "description_adoc": "PLUGIN_NAME did not apply build log decorators from the Build Environment configuration to module builds.\nThis could prevent sensitive content in module build logs from being masked.\n\nPLUGIN_NAME now applies build log decorators from the Build Environment configuration to module builds.",
      "plugins": [
        {
          "name": "maven-plugin",
          "title": "Maven Integration",
          "previous": 3.3,
          "fixed": 3.4
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Maven Integration Plugin did not apply build log decorators from the Build Environment configuration to module builds.\nThis could prevent sensitive content in module build logs from being masked.</p>\n</div>\n<div class=\"paragraph\">\n<p>Maven Integration Plugin now applies build log decorators from the Build Environment configuration to module builds.</p>\n</div>"
    },
    {
      "id": "SECURITY-1098",
      "reporter": "Oleg Nenashev, CloudBees, Inc.",
      "title": "CSRF vulnerability in PLUGIN_NAME",
      "cve": "CVE-2019-10359",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L"
      },
      "description_adoc": "PLUGIN_NAME did not require that requests sent to the endpoint used to initiate the release process use POST.\nThis resulted in a cross-site request forgery vulnerability that allows attackers to perform releases.\n\nPLUGIN_NAME now requires that these requests be sent via POST.",
      "plugins": [
        {
          "name": "m2release",
          "title": "Maven Release Plug-in",
          "previous": "0.14.0",
          "fixed": "0.15.0"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Maven Release Plug-in Plugin did not require that requests sent to the endpoint used to initiate the release process use POST.\nThis resulted in a cross-site request forgery vulnerability that allows attackers to perform releases.</p>\n</div>\n<div class=\"paragraph\">\n<p>Maven Release Plug-in Plugin now requires that these requests be sent via POST.</p>\n</div>"
    },
    {
      "id": "SECURITY-1184",
      "reporter": "Daniel Beck, CloudBees, Inc.",
      "title": "Stored XSS vulnerability in PLUGIN_NAME",
      "cve": "CVE-2019-10360",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"
      },
      "description_adoc": "PLUGIN_NAME did not properly escape variables in multiple views, resulting in a stored cross-site scripting vulnerability.\n\nVariables on affected views are now escaped.",
      "plugins": [
        {
          "name": "m2release",
          "title": "Maven Release Plug-in",
          "previous": "0.14.0",
          "fixed": "0.15.0"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Maven Release Plug-in Plugin did not properly escape variables in multiple views, resulting in a stored cross-site scripting vulnerability.</p>\n</div>\n<div class=\"paragraph\">\n<p>Variables on affected views are now escaped.</p>\n</div>"
    },
    {
      "id": "SECURITY-1435",
      "reporter": "David Fiser of Trend Micro Nebula working with Trend Micro's Zero Day Initiative",
      "title": "PLUGIN_NAME stored credentials in plain text",
      "cve": "CVE-2019-10361",
      "cvss": {
        "severity": "Low",
        "vector": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "PLUGIN_NAME stored credentials unencrypted in its global configuration file `org.jvnet.hudson.plugins.m2release.M2ReleaseBuildWrapper.xml` on the Jenkins controller.\nThese credentials could be viewed by users with access to the Jenkins controller file system.\n\nPLUGIN_NAME now stores credentials encrypted.",
      "plugins": [
        {
          "name": "m2release",
          "title": "Maven Release Plug-in",
          "previous": "0.14.0",
          "fixed": "0.15.0"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Maven Release Plug-in Plugin stored credentials unencrypted in its global configuration file <code>org.jvnet.hudson.plugins.m2release.M2ReleaseBuildWrapper.xml</code> on the Jenkins controller.\nThese credentials could be viewed by users with access to the Jenkins controller file system.</p>\n</div>\n<div class=\"paragraph\">\n<p>Maven Release Plug-in Plugin now stores credentials encrypted.</p>\n</div>"
    },
    {
      "id": "SECURITY-1279",
      "reporter": null,
      "title": "PLUGIN_NAME failed to mask secrets in system log messages",
      "cve": "CVE-2019-10343",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
      },
      "description_adoc": "PLUGIN_NAME logs the changes it applies to the Jenkins system log.\nSecrets such as passwords should be masked (i.e. replaced with asterisks) in that log to prevent accidental disclosure.\n\nBetween PLUGIN_NAME 0.8-alpha and 1.0, log messages contained values if the values were specified using properties in the YAML file (link:/security/advisory/2018-06-25/#SECURITY-929[SECURITY-929]).\n\nSince PLUGIN_NAME 1.1, log messages in PLUGIN_NAME instead mask values of type `Secret`, which is used in Jenkins to store the values encrypted on disk.\nThis did not work in many instances, as plugins could use the jenkinsdoc:Secret[`Secret`] type to store credentials encrypted on disk while not having the `Secret` type appear in their Java API.\n\nPLUGIN_NAME now inspects the type and looks for a field, getter, or constructor argument corresponding to the property, making the secret detection much more robust for the purpose of log message masking.\n\nAs a workaround, administrators can configure the logging level of the logger `io.jenkins.plugins.casc.Attribute` to a level that does not include `INFO` messages.\nSee https://wiki.jenkins.io/display/JENKINS/Logging[the logging documentation] for details.",
      "plugins": [
        {
          "name": "configuration-as-code",
          "title": "Configuration as Code",
          "previous": 1.24,
          "fixed": 1.25
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Configuration as Code Plugin logs the changes it applies to the Jenkins system log.\nSecrets such as passwords should be masked (i.e. replaced with asterisks) in that log to prevent accidental disclosure.</p>\n</div>\n<div class=\"paragraph\">\n<p>Between Configuration as Code Plugin 0.8-alpha and 1.0, log messages contained values if the values were specified using properties in the YAML file (<a href=\"/security/advisory/2018-06-25/#SECURITY-929\">SECURITY-929</a>).</p>\n</div>\n<div class=\"paragraph\">\n<p>Since Configuration as Code Plugin 1.1, log messages in Configuration as Code Plugin instead mask values of type <code>Secret</code>, which is used in Jenkins to store the values encrypted on disk.\nThis did not work in many instances, as plugins could use the jenkinsdoc:Secret[<code>Secret</code>] type to store credentials encrypted on disk while not having the <code>Secret</code> type appear in their Java API.</p>\n</div>\n<div class=\"paragraph\">\n<p>Configuration as Code Plugin now inspects the type and looks for a field, getter, or constructor argument corresponding to the property, making the secret detection much more robust for the purpose of log message masking.</p>\n</div>\n<div class=\"paragraph\">\n<p>As a workaround, administrators can configure the logging level of the logger <code>io.jenkins.plugins.casc.Attribute</code> to a level that does not include <code>INFO</code> messages.\nSee <a href=\"https://wiki.jenkins.io/display/JENKINS/Logging\">the logging documentation</a> for details.</p>\n</div>"
    },
    {
      "id": "SECURITY-1290",
      "reporter": "Mikaël Barbero (Eclipse Foundation)",
      "title": "PLUGIN_NAME allowed users without Overall/Administer permission to access documentation",
      "cve": "CVE-2019-10344",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "PLUGIN_NAME provides a generated schema and reference documentation for the configuration options supported on the current Jenkins instance.\nThese URLs did not perform additional permission checks, resulting in their content being available to users with Overall/Read access.\nThis included detailed information about installed plugins that may not be available otherwise.\n\nAccess to these URLs is now restricted to users with Overall/Administer permission.",
      "plugins": [
        {
          "name": "configuration-as-code",
          "title": "Configuration as Code",
          "previous": 1.24,
          "fixed": 1.25
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Configuration as Code Plugin provides a generated schema and reference documentation for the configuration options supported on the current Jenkins instance.\nThese URLs did not perform additional permission checks, resulting in their content being available to users with Overall/Read access.\nThis included detailed information about installed plugins that may not be available otherwise.</p>\n</div>\n<div class=\"paragraph\">\n<p>Access to these URLs is now restricted to users with Overall/Administer permission.</p>\n</div>"
    },
    {
      "id": "SECURITY-1303",
      "reporter": null,
      "title": "PLUGIN_NAME did not mask proxy credentials",
      "cve": "CVE-2019-10345",
      "cvss": {
        "severity": "Low",
        "vector": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "PLUGIN_NAME provides a custom configurator for the Jenkins proxy configuration.\n\nThis feature did not mask the password for logging or encrypt it in the export.\n\nPLUGIN_NAME 1.20 and newer mask the Jenkins proxy password when logged and only store it encrypted in the export.",
      "plugins": [
        {
          "name": "configuration-as-code",
          "title": "Configuration as Code",
          "previous": 1.24,
          "fixed": 1.25
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Configuration as Code Plugin provides a custom configurator for the Jenkins proxy configuration.</p>\n</div>\n<div class=\"paragraph\">\n<p>This feature did not mask the password for logging or encrypt it in the export.</p>\n</div>\n<div class=\"paragraph\">\n<p>Configuration as Code Plugin 1.20 and newer mask the Jenkins proxy password when logged and only store it encrypted in the export.</p>\n</div>"
    },
    {
      "id": "SECURITY-1446",
      "reporter": "Wadeck Follonier, CloudBees, Inc.",
      "title": "PLUGIN_NAME evaluated variable references when importing a previously exported configuration",
      "cve": "CVE-2019-10362",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:L/I:L/A:N"
      },
      "description_adoc": "PLUGIN_NAME allows exporting the live Jenkins configuration, as well as importing and applying a configuration provided in the same format.\nOne of the features of the import is that it allows specifying variable references (e.g. `${VARIABLE_NAME}`) in the configuration YAML file.\nThese will be replaced by the value of the corresponding environment variable (or https://github.com/jenkinsci/configuration-as-code-plugin/#handling-secrets[other source of secrets]) during import (interpolation).\nIf such a value should not be interpolated, the escape character `^` can be used before (e.g. `^${VARIABLE_NAME}`).\n\nExporting did not add `^` escape characters to exported strings, such as various entity descriptions.\nThis allowed attackers with permission to configure certain entities, such as credentials or agents, to specify crafted descriptions containing variable references.\nThese would be replaced by the corresponding environment variable's value during a subsequent import.\n\nThe export now adds `^` escape characters to exported strings as needed to prevent them from being interpolated during import.\nPreviously exported configurations may require manual cleanup by Jenkins admins before being imported.",
      "plugins": [
        {
          "name": "configuration-as-code",
          "title": "Configuration as Code",
          "previous": 1.24,
          "fixed": 1.25
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Configuration as Code Plugin allows exporting the live Jenkins configuration, as well as importing and applying a configuration provided in the same format.\nOne of the features of the import is that it allows specifying variable references (e.g. <code>${VARIABLE_NAME}</code>) in the configuration YAML file.\nThese will be replaced by the value of the corresponding environment variable (or <a href=\"https://github.com/jenkinsci/configuration-as-code-plugin/#handling-secrets\">other source of secrets</a>) during import (interpolation).\nIf such a value should not be interpolated, the escape character <code>^</code> can be used before (e.g. <code>^${VARIABLE_NAME}</code>).</p>\n</div>\n<div class=\"paragraph\">\n<p>Exporting did not add <code>^</code> escape characters to exported strings, such as various entity descriptions.\nThis allowed attackers with permission to configure certain entities, such as credentials or agents, to specify crafted descriptions containing variable references.\nThese would be replaced by the corresponding environment variable&#8217;s value during a subsequent import.</p>\n</div>\n<div class=\"paragraph\">\n<p>The export now adds <code>^</code> escape characters to exported strings as needed to prevent them from being interpolated during import.\nPreviously exported configurations may require manual cleanup by Jenkins admins before being imported.</p>\n</div>"
    },
    {
      "id": "SECURITY-1458",
      "reporter": null,
      "title": "PLUGIN_NAME exported secret values in plain text",
      "cve": "CVE-2019-10363",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N"
      },
      "description_adoc": "PLUGIN_NAME allows to export the current Jenkins configuration as a YAML file.\nSecrets such as passwords should be exported in their encrypted form to prevent accidental disclosure.\n\nPLUGIN_NAME did not reliably detect which values in the exported YAML file need to be considered sensitive (e.g. credentials and other secrets), as plugins could use the jenkinsdoc:Secret[`Secret`] type to store credentials encrypted on disk while not having the `Secret` type appear in their Java API.\nThis resulted in credentials being exported in plain text in some cases.\n\nPLUGIN_NAME now inspects the type and looks for a field, getter, or constructor argument corresponding to the property, making the secret detection much more robust for the purpose of exporting encrypted secrets.",
      "plugins": [
        {
          "name": "configuration-as-code",
          "title": "Configuration as Code",
          "previous": 1.24,
          "fixed": 1.25
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Configuration as Code Plugin allows to export the current Jenkins configuration as a YAML file.\nSecrets such as passwords should be exported in their encrypted form to prevent accidental disclosure.</p>\n</div>\n<div class=\"paragraph\">\n<p>Configuration as Code Plugin did not reliably detect which values in the exported YAML file need to be considered sensitive (e.g. credentials and other secrets), as plugins could use the jenkinsdoc:Secret[<code>Secret</code>] type to store credentials encrypted on disk while not having the <code>Secret</code> type appear in their Java API.\nThis resulted in credentials being exported in plain text in some cases.</p>\n</div>\n<div class=\"paragraph\">\n<p>Configuration as Code Plugin now inspects the type and looks for a field, getter, or constructor argument corresponding to the property, making the secret detection much more robust for the purpose of exporting encrypted secrets.</p>\n</div>"
    },
    {
      "id": "SECURITY-673",
      "reporter": null,
      "title": "PLUGIN_NAME leaked beginning of private key in system log",
      "cve": "CVE-2019-10364",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
      },
      "description_adoc": "PLUGIN_NAME printed a log message that contained the beginning of the private key to the Jenkins system log.\n\nThe log message no longer includes the beginning of the private key.",
      "plugins": [
        {
          "name": "ec2",
          "title": "Amazon EC2",
          "previous": 1.43,
          "fixed": 1.44
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Amazon EC2 Plugin printed a log message that contained the beginning of the private key to the Jenkins system log.</p>\n</div>\n<div class=\"paragraph\">\n<p>The log message no longer includes the beginning of the private key.</p>\n</div>"
    },
    {
      "id": "SECURITY-1345",
      "reporter": "Jesse Glick, CloudBees, Inc.",
      "title": "PLUGIN_NAME stored temporary secret in a user accessible location",
      "cve": "CVE-2019-10365",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "PLUGIN_NAME created a temporary file named `.kube…config` containing a temporary access token in the project workspace.\nThis allowed the file to be accessed via workspace browsers, or accidentally archived, disclosing the token.\n\nThis temporary file is now created outside the regular project workspace.",
      "plugins": [
        {
          "name": "google-kubernetes-engine",
          "title": "Google Kubernetes Engine",
          "previous": "0.6.2",
          "fixed": "0.6.3"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Google Kubernetes Engine Plugin created a temporary file named <code>.kube…config</code> containing a temporary access token in the project workspace.\nThis allowed the file to be accessed via workspace browsers, or accidentally archived, disclosing the token.</p>\n</div>\n<div class=\"paragraph\">\n<p>This temporary file is now created outside the regular project workspace.</p>\n</div>"
    },
    {
      "id": "SECURITY-1429",
      "reporter": "David Fiser of Trend Micro Nebula working with Trend Micro's Zero Day Initiative",
      "title": "PLUGIN_NAME stored credentials in plain text",
      "cve": "CVE-2019-10366",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "PLUGIN_NAME stored credentials unencrypted in job `config.xml` files on the Jenkins controller.\nThese credentials could be viewed by users with Extended Read permission, or access to the Jenkins controller file system.\n\nPLUGIN_NAME now stores credentials encrypted.",
      "plugins": [
        {
          "name": "skytap",
          "title": "Skytap Cloud CI",
          "previous": 2.06,
          "fixed": 2.07
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Skytap Cloud CI Plugin stored credentials unencrypted in job <code>config.xml</code> files on the Jenkins controller.\nThese credentials could be viewed by users with Extended Read permission, or access to the Jenkins controller file system.</p>\n</div>\n<div class=\"paragraph\">\n<p>Skytap Cloud CI Plugin now stores credentials encrypted.</p>\n</div>"
    }
  ],
  "components": [],
  "index_details_html": null,
  "content_html": null
}