{
  "title": "Jenkins Security Advisory 2022-05-17",
  "date": "2022-05-17",
  "url": "/security/advisory/2022-05-17/",
  "kind": "plugins",
  "core": null,
  "issues": [
    {
      "id": "SECURITY-359",
      "reporter": "Jesse Glick, CloudBees, Inc.",
      "title": "Sandbox bypass vulnerability through implicitly allowlisted platform Groovy files in PLUGIN_NAME",
      "cve": "CVE-2022-30945",
      "cvss": {
        "severity": "High",
        "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "description_adoc": "PLUGIN_NAME allows pipelines to load Groovy source files.\nThis is intended to be used to allow Global Shared Libraries to execute without sandbox protection.\n\nIn PLUGIN_NAME 2689.v434009a_31b_f1 and earlier, any Groovy source files bundled with Jenkins core and plugins could be loaded this way and their methods executed.\nIf a suitable Groovy source file is available on the classpath of Jenkins, sandbox protections can be bypassed.\n\nNOTE: The Jenkins security team has been unable to identify any Groovy source files in Jenkins core or plugins that would allow attackers to execute dangerous code.\nWhile the severity of this issue is declared as High due to the potential impact, successful exploitation is considered very unlikely.\n\nPLUGIN_NAME 2692.v76b_089ccd026 restricts which Groovy source files can be loaded in Pipelines.\n\nGroovy source files in public plugins intended to be executed in sandboxed pipelines have been identified and added to an allowlist.\nThe new extension point `org.jenkinsci.plugins.workflow.cps.GroovySourceFileAllowlist` allows plugins to add specific Groovy source files to that allowlist if necessary, but creation of plugin-specific Pipeline DSLs is strongly discouraged.",
      "plugins": [
        {
          "name": "workflow-cps",
          "title": "Pipeline: Groovy",
          "previous": "2689.v434009a_31b_f1",
          "fixed": "2692.v76b_089ccd026"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Pipeline: Groovy Plugin allows pipelines to load Groovy source files.\nThis is intended to be used to allow Global Shared Libraries to execute without sandbox protection.</p>\n</div>\n<div class=\"paragraph\">\n<p>In Pipeline: Groovy Plugin 2689.v434009a_31b_f1 and earlier, any Groovy source files bundled with Jenkins core and plugins could be loaded this way and their methods executed.\nIf a suitable Groovy source file is available on the classpath of Jenkins, sandbox protections can be bypassed.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nThe Jenkins security team has been unable to identify any Groovy source files in Jenkins core or plugins that would allow attackers to execute dangerous code.\nWhile the severity of this issue is declared as High due to the potential impact, successful exploitation is considered very unlikely.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>Pipeline: Groovy Plugin 2692.v76b_089ccd026 restricts which Groovy source files can be loaded in Pipelines.</p>\n</div>\n<div class=\"paragraph\">\n<p>Groovy source files in public plugins intended to be executed in sandboxed pipelines have been identified and added to an allowlist.\nThe new extension point <code>org.jenkinsci.plugins.workflow.cps.GroovySourceFileAllowlist</code> allows plugins to add specific Groovy source files to that allowlist if necessary, but creation of plugin-specific Pipeline DSLs is strongly discouraged.</p>\n</div>"
    },
    {
      "id": "SECURITY-2116",
      "reporter": null,
      "title": "CSRF vulnerability in PLUGIN_NAME",
      "cve": "CVE-2022-30946",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N"
      },
      "description_adoc": "PLUGIN_NAME 1158.v7c1b_73a_69a_08 and earlier does not require POST requests for a form validation endpoint, resulting in a cross-site request forgery (CSRF) vulnerability.\n\nThis vulnerability allows attackers to have Jenkins send an HTTP request to an attacker-specified webserver.\n\nThis form validation method no longer sends HTTP requests in PLUGIN_NAME 1172.v35f6a_0b_8207e.",
      "plugins": [
        {
          "name": "script-security",
          "title": "Script Security",
          "previous": "1158.v7c1b_73a_69a_08",
          "fixed": "1172.v35f6a_0b_8207e"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Script Security Plugin 1158.v7c1b_73a_69a_08 and earlier does not require POST requests for a form validation endpoint, resulting in a cross-site request forgery (CSRF) vulnerability.</p>\n</div>\n<div class=\"paragraph\">\n<p>This vulnerability allows attackers to have Jenkins send an HTTP request to an attacker-specified webserver.</p>\n</div>\n<div class=\"paragraph\">\n<p>This form validation method no longer sends HTTP requests in Script Security Plugin 1172.v35f6a_0b_8207e.</p>\n</div>"
    },
    {
      "id": "SECURITY-2478",
      "reporter": "Daniel Beck, CloudBees, Inc.",
      "title": "Multiple SCM plugins can check out from the controller file system",
      "cve": "CVE-2022-30947 (Git), CVE-2022-30948 (Mercurial), CVE-2022-30949 (REPO)",
      "cvss": {
        "severity": "Low",
        "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "SCMs support a number of different URL schemes, including local file system paths (e.g. using `file:` URLs).\n\nHistorically in Jenkins, only agents checked out from SCM, and if multiple projects share the same agent, there is no expected isolation between builds besides using different workspaces unless overridden.\nSome Pipeline-related features check out SCMs from the Jenkins controller as well.\n\nThis allows attackers able to configure pipelines to check out some SCM repositories stored on the Jenkins controller's file system using local paths as SCM URLs, obtaining limited information about other projects' SCM contents.\nThe following Jenkins plugins are known to be affected:\n\n* https://plugins.jenkins.io/git/[Git] 4.11.1 and earlier\n* https://plugins.jenkins.io/mercurial/[Mercurial] 2.16 and earlier\n* https://plugins.jenkins.io/repo/[REPO] 1.14.0 and earlier\n\nAffected plugins have been updated to reject local file paths being checked out on the controller:\n\n* https://plugins.jenkins.io/git/[Git] 4.11.2\n* https://plugins.jenkins.io/mercurial/[Mercurial] 2.16.1\n* https://plugins.jenkins.io/repo/[REPO] 1.15.0",
      "plugins": [
        {
          "name": "git",
          "title": "Git",
          "previous": "4.11.1",
          "fixed": "4.11.2"
        },
        {
          "name": "mercurial",
          "title": "Mercurial",
          "previous": "2.16",
          "fixed": "2.16.1"
        },
        {
          "name": "repo",
          "title": "REPO",
          "previous": "1.14.0",
          "fixed": "1.14.1"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>SCMs support a number of different URL schemes, including local file system paths (e.g. using <code>file:</code> URLs).</p>\n</div>\n<div class=\"paragraph\">\n<p>Historically in Jenkins, only agents checked out from SCM, and if multiple projects share the same agent, there is no expected isolation between builds besides using different workspaces unless overridden.\nSome Pipeline-related features check out SCMs from the Jenkins controller as well.</p>\n</div>\n<div class=\"paragraph\">\n<p>This allows attackers able to configure pipelines to check out some SCM repositories stored on the Jenkins controller&#8217;s file system using local paths as SCM URLs, obtaining limited information about other projects' SCM contents.\nThe following Jenkins plugins are known to be affected:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://plugins.jenkins.io/git/\">Git</a> 4.11.1 and earlier</p>\n</li>\n<li>\n<p><a href=\"https://plugins.jenkins.io/mercurial/\">Mercurial</a> 2.16 and earlier</p>\n</li>\n<li>\n<p><a href=\"https://plugins.jenkins.io/repo/\">REPO</a> 1.14.0 and earlier</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Affected plugins have been updated to reject local file paths being checked out on the controller:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://plugins.jenkins.io/git/\">Git</a> 4.11.2</p>\n</li>\n<li>\n<p><a href=\"https://plugins.jenkins.io/mercurial/\">Mercurial</a> 2.16.1</p>\n</li>\n<li>\n<p><a href=\"https://plugins.jenkins.io/repo/\">REPO</a> 1.15.0</p>\n</li>\n</ul>\n</div>"
    },
    {
      "id": "SECURITY-2604",
      "reporter": "Kalle Niemitalo, Procomp Solutions Oy",
      "title": "Multiple vulnerabilities in Windows Remote Command library in PLUGIN_NAME",
      "cve": "CVE-2022-30950 (buffer overflow), CVE-2022-30951 (access control)",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:N"
      },
      "description_adoc": "PLUGIN_NAME 1.8 and earlier includes the Windows Remote Command library.\nIt provides a general-purpose remote command execution capability that Jenkins uses to check if Java is available, and if not, to install it.\n\nThis library has a buffer overflow vulnerability that may allow users able to connect to a named pipe to execute commands on the Windows agent machine.\n\nAdditionally, while the processes are started as the user who connects to the named pipe, no access control takes place, potentially allowing users to start processes even if they're not allowed to log in.\n\nPLUGIN_NAME 1.8.1 no longer includes the Windows Remote Command library.\nA Java runtime is expected to be available on agent machines and PLUGIN_NAME 1.8.1 does not install a JDK automatically otherwise.\n\nNOTE: PLUGIN_NAME is the only Jenkins project deliverable the Jenkins project security team is aware of that includes the Windows Remote Command library.",
      "plugins": [
        {
          "name": "windows-slaves",
          "title": null,
          "previous": "1.8",
          "fixed": "1.8.1"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>windows-slaves Plugin 1.8 and earlier includes the Windows Remote Command library.\nIt provides a general-purpose remote command execution capability that Jenkins uses to check if Java is available, and if not, to install it.</p>\n</div>\n<div class=\"paragraph\">\n<p>This library has a buffer overflow vulnerability that may allow users able to connect to a named pipe to execute commands on the Windows agent machine.</p>\n</div>\n<div class=\"paragraph\">\n<p>Additionally, while the processes are started as the user who connects to the named pipe, no access control takes place, potentially allowing users to start processes even if they&#8217;re not allowed to log in.</p>\n</div>\n<div class=\"paragraph\">\n<p>windows-slaves Plugin 1.8.1 no longer includes the Windows Remote Command library.\nA Java runtime is expected to be available on agent machines and windows-slaves Plugin 1.8.1 does not install a JDK automatically otherwise.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nwindows-slaves Plugin is the only Jenkins project deliverable the Jenkins project security team is aware of that includes the Windows Remote Command library.\n</td>\n</tr>\n</table>\n</div>"
    },
    {
      "id": "SECURITY-714",
      "reporter": null,
      "title": "User-scoped credentials exposed to other users by PLUGIN_NAME",
      "cve": "CVE-2022-30952",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N"
      },
      "description_adoc": "When pipelines are created using the pipeline creation wizard in Blue Ocean, the credentials used are stored in the per-user credentials store of the user creating the pipeline.\nTo allow pipelines to use this credential to scan repositories and checkout from SCM, the Blue Ocean Credentials Provider allows pipelines to access a specific credential from the per-user credentials store in PLUGIN_NAME 1.25.3 and earlier.\n\nAs a result, attackers with Job/Configure permission can rewrite job configurations in a way that lets them access and capture any attacker-specified credential from any user's private credentials store.\n\nPLUGIN_NAME 1.25.4 deprecates the Blue Ocean Credentials Provider and disables it by default.\nAs a result, all jobs initially set up using the Blue Ocean pipeline creation wizard and configured to use the credential specified at that time will no longer be able to access the credential, resulting in failures to scan repositories, checkout from SCM, etc. unless the repository is public and can be accessed without credentials.\n\nNOTE: This also applies to newly created pipelines after PLUGIN_NAME has been updated to 1.25.4.\n\nAdministrators should reconfigure affected pipelines to use a credential from the Jenkins credential store or a folder credential store.\nSee https://cloudbees.com/r/blue-ocean-credentials-removal[this help page on cloudbees.com] to learn more.\n\nTo re-enable the Blue Ocean Credentials Provider, set the Java system property `io.jenkins.blueocean.rest.impl.pipeline.credential.BlueOceanCredentialsProvider.enabled` to `true`.\nDoing so is discouraged, as that will restore the unsafe behavior.\n\nNOTE: While Credentials Plugin provides the _Configure Credential Providers_ UI to enable or disable certain credentials providers, enabling the Blue Ocean Credentials Provider there is not enough in PLUGIN_NAME 1.25.4.\nBoth the UI and system property need to enable the Blue Ocean Credentials Provider.\n\nAdministrators not immediately able to update Blue Ocean are advised to disable the Blue Ocean Credentials Provider through the UI at _Manage Jenkins » Configure Credential Providers_ and to reconfigure affected pipelines to use a credential from the Jenkins credential store or a folder credential store.",
      "plugins": [
        {
          "name": "blueocean-pipeline-scm-api",
          "title": "Pipeline SCM API for Blue Ocean",
          "previous": "1.25.3",
          "fixed": "1.25.4"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>When pipelines are created using the pipeline creation wizard in Blue Ocean, the credentials used are stored in the per-user credentials store of the user creating the pipeline.\nTo allow pipelines to use this credential to scan repositories and checkout from SCM, the Blue Ocean Credentials Provider allows pipelines to access a specific credential from the per-user credentials store in Pipeline SCM API for Blue Ocean Plugin 1.25.3 and earlier.</p>\n</div>\n<div class=\"paragraph\">\n<p>As a result, attackers with Job/Configure permission can rewrite job configurations in a way that lets them access and capture any attacker-specified credential from any user&#8217;s private credentials store.</p>\n</div>\n<div class=\"paragraph\">\n<p>Pipeline SCM API for Blue Ocean Plugin 1.25.4 deprecates the Blue Ocean Credentials Provider and disables it by default.\nAs a result, all jobs initially set up using the Blue Ocean pipeline creation wizard and configured to use the credential specified at that time will no longer be able to access the credential, resulting in failures to scan repositories, checkout from SCM, etc. unless the repository is public and can be accessed without credentials.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nThis also applies to newly created pipelines after Pipeline SCM API for Blue Ocean Plugin has been updated to 1.25.4.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>Administrators should reconfigure affected pipelines to use a credential from the Jenkins credential store or a folder credential store.\nSee <a href=\"https://cloudbees.com/r/blue-ocean-credentials-removal\">this help page on cloudbees.com</a> to learn more.</p>\n</div>\n<div class=\"paragraph\">\n<p>To re-enable the Blue Ocean Credentials Provider, set the Java system property <code>io.jenkins.blueocean.rest.impl.pipeline.credential.BlueOceanCredentialsProvider.enabled</code> to <code>true</code>.\nDoing so is discouraged, as that will restore the unsafe behavior.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nWhile Credentials Plugin provides the <em>Configure Credential Providers</em> UI to enable or disable certain credentials providers, enabling the Blue Ocean Credentials Provider there is not enough in Pipeline SCM API for Blue Ocean Plugin 1.25.4.\nBoth the UI and system property need to enable the Blue Ocean Credentials Provider.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>Administrators not immediately able to update Blue Ocean are advised to disable the Blue Ocean Credentials Provider through the UI at <em>Manage Jenkins » Configure Credential Providers</em> and to reconfigure affected pipelines to use a credential from the Jenkins credential store or a folder credential store.</p>\n</div>"
    },
    {
      "id": "SECURITY-2502",
      "reporter": "Tanner Emek from Tinder Security Labs",
      "title": "CSRF vulnerability and missing permission checks in PLUGIN_NAME",
      "cve": "CVE-2022-30953 (CSRF), CVE-2022-30954 (permission check)",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"
      },
      "description_adoc": "PLUGIN_NAME 1.25.3 and earlier does not perform permission checks in several HTTP endpoints.\n\nThis allows attackers with Overall/Read permission to send requests to an attacker-specified URL.\n\nAdditionally, these endpoints do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.\n\nPLUGIN_NAME 1.25.4 requires POST requests and the appropriate permissions for the affected HTTP endpoints.",
      "plugins": [
        {
          "name": "blueocean",
          "title": "Blue Ocean",
          "previous": "1.25.3",
          "fixed": "1.25.4"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Blue Ocean Plugin 1.25.3 and earlier does not perform permission checks in several HTTP endpoints.</p>\n</div>\n<div class=\"paragraph\">\n<p>This allows attackers with Overall/Read permission to send requests to an attacker-specified URL.</p>\n</div>\n<div class=\"paragraph\">\n<p>Additionally, these endpoints do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>\n</div>\n<div class=\"paragraph\">\n<p>Blue Ocean Plugin 1.25.4 requires POST requests and the appropriate permissions for the affected HTTP endpoints.</p>\n</div>"
    },
    {
      "id": "SECURITY-2753",
      "reporter": "Kevin Guerroudj, CloudBees, Inc.",
      "title": "Missing permission check in PLUGIN_NAME allows enumerating credentials IDs",
      "cve": "CVE-2022-30955",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "PLUGIN_NAME 1.5.31 and earlier does not perform a permission check in an HTTP endpoint.\n\nThis allows attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins.\nThose can be used as part of an attack to capture the credentials using another vulnerability.\n\nAn enumeration of credentials IDs in PLUGIN_NAME 1.5.32 requires the appropriate permissions.",
      "plugins": [
        {
          "name": "gitlab-plugin",
          "title": "GitLab",
          "previous": "1.5.31",
          "fixed": "1.5.32"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>GitLab Plugin 1.5.31 and earlier does not perform a permission check in an HTTP endpoint.</p>\n</div>\n<div class=\"paragraph\">\n<p>This allows attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins.\nThose can be used as part of an attack to capture the credentials using another vulnerability.</p>\n</div>\n<div class=\"paragraph\">\n<p>An enumeration of credentials IDs in GitLab Plugin 1.5.32 requires the appropriate permissions.</p>\n</div>"
    },
    {
      "id": "SECURITY-2600",
      "reporter": "Kevin Guerroudj, CloudBees, Inc.",
      "title": "Stored XSS vulnerability in PLUGIN_NAME",
      "cve": "CVE-2022-30956",
      "cvss": {
        "severity": "High",
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H"
      },
      "description_adoc": "PLUGIN_NAME 3.6.10 and earlier does not restrict URL schemes in Rundeck webhook submissions.\n\nThis results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to submit crafted Rundeck webhook payloads.\n\nPLUGIN_NAME 3.6.11 sanitizes URLs submitted in Rundeck webhook payloads.",
      "plugins": [
        {
          "name": "rundeck",
          "title": "Rundeck",
          "previous": "3.6.10",
          "fixed": "3.6.11"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Rundeck Plugin 3.6.10 and earlier does not restrict URL schemes in Rundeck webhook submissions.</p>\n</div>\n<div class=\"paragraph\">\n<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to submit crafted Rundeck webhook payloads.</p>\n</div>\n<div class=\"paragraph\">\n<p>Rundeck Plugin 3.6.11 sanitizes URLs submitted in Rundeck webhook payloads.</p>\n</div>"
    },
    {
      "id": "SECURITY-2315",
      "reporter": "Wadeck Follonier, CloudBees, Inc.",
      "title": "Missing permission check in PLUGIN_NAME allows enumerating credentials IDs",
      "cve": "CVE-2022-30957",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "PLUGIN_NAME 2.6.1 and earlier does not perform a permission check in an HTTP endpoint.\n\nThis allows attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins.\nThose can be used as part of an attack to capture the credentials using another vulnerability.\n\nAs of publication of this advisory, there is no fix. link:/security/plugins/#unresolved[Learn why we announce this.]",
      "plugins": [
        {
          "name": "ssh",
          "title": "SSH",
          "previous": "2.6.1",
          "fixed": null
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>SSH Plugin 2.6.1 and earlier does not perform a permission check in an HTTP endpoint.</p>\n</div>\n<div class=\"paragraph\">\n<p>This allows attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins.\nThose can be used as part of an attack to capture the credentials using another vulnerability.</p>\n</div>\n<div class=\"paragraph\">\n<p>As of publication of this advisory, there is no fix. <a href=\"/security/plugins/#unresolved\">Learn why we announce this.</a></p>\n</div>"
    },
    {
      "id": "SECURITY-2093",
      "reporter": "Long Nguyen, Viettel Cyber Security",
      "title": "CSRF vulnerability and missing permission checks in PLUGIN_NAME allow capturing credentials",
      "cve": "CVE-2022-30958 (CSRF), CVE-2022-30959 (permission check)",
      "cvss": {
        "severity": "High",
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:N"
      },
      "description_adoc": "PLUGIN_NAME 2.6.1 and earlier does not perform a permission check in an HTTP endpoint.\n\nThis allows attackers with Overall/Read permission to connect to an attacker-specified SSH server using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.\n\nAdditionally, this endpoint does not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.\n\nAs of publication of this advisory, there is no fix. link:/security/plugins/#unresolved[Learn why we announce this.]",
      "plugins": [
        {
          "name": "ssh",
          "title": "SSH",
          "previous": "2.6.1",
          "fixed": null
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>SSH Plugin 2.6.1 and earlier does not perform a permission check in an HTTP endpoint.</p>\n</div>\n<div class=\"paragraph\">\n<p>This allows attackers with Overall/Read permission to connect to an attacker-specified SSH server using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>\n</div>\n<div class=\"paragraph\">\n<p>Additionally, this endpoint does not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>\n</div>\n<div class=\"paragraph\">\n<p>As of publication of this advisory, there is no fix. <a href=\"/security/plugins/#unresolved\">Learn why we announce this.</a></p>\n</div>"
    },
    {
      "id": "SECURITY-2717",
      "reporter": "Kevin Guerroudj, CloudBees, Inc., Wadeck Follonier, CloudBees, Inc., and Daniel Beck, CloudBees, Inc.",
      "title": "Stored XSS vulnerabilities in multiple plugins providing additional parameter types",
      "cve": "CVE-2022-30960 (Application Detector), CVE-2022-30961 (Autocomplete Parameter), CVE-2022-30962 (Global Variable String Parameter), CVE-2022-30963 (JDK Parameter), CVE-2022-30964 (Multiselect parameter), CVE-2022-30965 (Promoted Builds (Simple)), CVE-2022-30966 (Random String Parameter), CVE-2022-30967 (Selection tasks), CVE-2022-30968 (vboxwrapper)",
      "cvss": {
        "severity": "High",
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H"
      },
      "description_adoc": "Multiple plugins do not escape the name and description of the parameter types they provide:\n\n* Application Detector Plugin 1.0.8 and earlier (SECURITY-2732 / CVE-2022-30960)\n* Autocomplete Parameter Plugin 1.1 and earlier (SECURITY-2729 / CVE-2022-30961)\n* Global Variable String Parameter Plugin 1.2 and earlier (SECURITY-2715 / CVE-2022-30962)\n* JDK Parameter Plugin 1.0 and earlier (SECURITY-2713 / CVE-2022-30963)\n* Multiselect parameter Plugin 1.3 and earlier (SECURITY-2726 / CVE-2022-30964)\n* Promoted Builds (Simple) Plugin 1.9 and earlier (SECURITY-2720 / CVE-2022-30965)\n* Random String Parameter Plugin 1.0 and earlier (SECURITY-2722 / CVE-2022-30966)\n* Selection tasks Plugin 1.0 and earlier (SECURITY-2728 / CVE-2022-30967)\n* vboxwrapper Plugin 1.3 and earlier (SECURITY-2734 / CVE-2022-30968)\n\nThis results in stored cross-site scripting (XSS) vulnerabilities exploitable by attackers with Item/Configure permission.\n\nExploitation of these vulnerabilities requires that parameters are listed on another page, like the \"Build With Parameters\" and \"Parameters\" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation.\nJenkins (core) has prevented exploitation of vulnerabilities of this kind on the \"Build With Parameters\" and \"Parameters\" pages since 2.44 and LTS 2.32.2 as part of the link:/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions[SECURITY-353 / CVE-2017-2601] fix.\nAdditionally, several plugins have previously been updated to list parameters in a way that prevents exploitation by default, see link:/security/advisory/2022-04-12/#SECURITY-2617[SECURITY-2617 in the 2022-04-12 security advisory for a list].\n\nThe following plugins have been updated to escape the name and description of the parameter types they provide in the versions specified:\n\n* Application Detector Plugin 1.0.9\n* Multiselect parameter Plugin 1.4\n\nAs of publication of this advisory, there is no fix available for the following plugins:\n\n* Autocomplete Parameter Plugin 1.1 and earlier (SECURITY-2729 / CVE-2022-30961)\n* Global Variable String Parameter Plugin 1.2 and earlier (SECURITY-2715 / CVE-2022-30962)\n* JDK Parameter Plugin 1.0 and earlier (SECURITY-2713 / CVE-2022-30963)\n* Promoted Builds (Simple) Plugin 1.9 and earlier (SECURITY-2720 / CVE-2022-30965)\n* Random String Parameter Plugin 1.0 and earlier (SECURITY-2722 / CVE-2022-30966)\n* Selection tasks Plugin 1.0 and earlier (SECURITY-2728 / CVE-2022-30967)\n* vboxwrapper Plugin 1.3 and earlier (SECURITY-2734 / CVE-2022-30968)\n\nlink:/security/plugins/#unresolved[Learn why we announce this.]",
      "plugins": [
        {
          "name": "multiselect-parameter",
          "title": "Multiselect parameter",
          "previous": "1.3",
          "fixed": "1.4"
        },
        {
          "name": "app-detector",
          "title": "Application Detector",
          "previous": "1.0.8",
          "fixed": "1.0.9"
        },
        {
          "name": "autocomplete-parameter",
          "title": "Autocomplete Parameter",
          "previous": "1.1",
          "fixed": null
        },
        {
          "name": "JDK_Parameter_Plugin",
          "title": "JDK Parameter",
          "previous": "1.0",
          "fixed": null
        },
        {
          "name": "global-variable-string-parameter",
          "title": "Global Variable String Parameter",
          "previous": "1.2",
          "fixed": null
        },
        {
          "name": "promoted-builds-simple",
          "title": "Promoted Builds (Simple)",
          "previous": "1.9",
          "fixed": null
        },
        {
          "name": "random-string-parameter",
          "title": "Random String Parameter",
          "previous": "1.0",
          "fixed": null
        },
        {
          "name": "selection-tasks-plugin",
          "title": "Selection tasks",
          "previous": "1.0",
          "fixed": null
        },
        {
          "name": "vboxwrapper",
          "title": "vboxwrapper",
          "previous": "1.3",
          "fixed": null
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Multiple plugins do not escape the name and description of the parameter types they provide:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Application Detector Plugin 1.0.8 and earlier (SECURITY-2732 / CVE-2022-30960)</p>\n</li>\n<li>\n<p>Autocomplete Parameter Plugin 1.1 and earlier (SECURITY-2729 / CVE-2022-30961)</p>\n</li>\n<li>\n<p>Global Variable String Parameter Plugin 1.2 and earlier (SECURITY-2715 / CVE-2022-30962)</p>\n</li>\n<li>\n<p>JDK Parameter Plugin 1.0 and earlier (SECURITY-2713 / CVE-2022-30963)</p>\n</li>\n<li>\n<p>Multiselect parameter Plugin 1.3 and earlier (SECURITY-2726 / CVE-2022-30964)</p>\n</li>\n<li>\n<p>Promoted Builds (Simple) Plugin 1.9 and earlier (SECURITY-2720 / CVE-2022-30965)</p>\n</li>\n<li>\n<p>Random String Parameter Plugin 1.0 and earlier (SECURITY-2722 / CVE-2022-30966)</p>\n</li>\n<li>\n<p>Selection tasks Plugin 1.0 and earlier (SECURITY-2728 / CVE-2022-30967)</p>\n</li>\n<li>\n<p>vboxwrapper Plugin 1.3 and earlier (SECURITY-2734 / CVE-2022-30968)</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>This results in stored cross-site scripting (XSS) vulnerabilities exploitable by attackers with Item/Configure permission.</p>\n</div>\n<div class=\"paragraph\">\n<p>Exploitation of these vulnerabilities requires that parameters are listed on another page, like the \"Build With Parameters\" and \"Parameters\" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation.\nJenkins (core) has prevented exploitation of vulnerabilities of this kind on the \"Build With Parameters\" and \"Parameters\" pages since 2.44 and LTS 2.32.2 as part of the <a href=\"/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions\">SECURITY-353 / CVE-2017-2601</a> fix.\nAdditionally, several plugins have previously been updated to list parameters in a way that prevents exploitation by default, see <a href=\"/security/advisory/2022-04-12/#SECURITY-2617\">SECURITY-2617 in the 2022-04-12 security advisory for a list</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>The following plugins have been updated to escape the name and description of the parameter types they provide in the versions specified:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Application Detector Plugin 1.0.9</p>\n</li>\n<li>\n<p>Multiselect parameter Plugin 1.4</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>As of publication of this advisory, there is no fix available for the following plugins:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Autocomplete Parameter Plugin 1.1 and earlier (SECURITY-2729 / CVE-2022-30961)</p>\n</li>\n<li>\n<p>Global Variable String Parameter Plugin 1.2 and earlier (SECURITY-2715 / CVE-2022-30962)</p>\n</li>\n<li>\n<p>JDK Parameter Plugin 1.0 and earlier (SECURITY-2713 / CVE-2022-30963)</p>\n</li>\n<li>\n<p>Promoted Builds (Simple) Plugin 1.9 and earlier (SECURITY-2720 / CVE-2022-30965)</p>\n</li>\n<li>\n<p>Random String Parameter Plugin 1.0 and earlier (SECURITY-2722 / CVE-2022-30966)</p>\n</li>\n<li>\n<p>Selection tasks Plugin 1.0 and earlier (SECURITY-2728 / CVE-2022-30967)</p>\n</li>\n<li>\n<p>vboxwrapper Plugin 1.3 and earlier (SECURITY-2734 / CVE-2022-30968)</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"/security/plugins/#unresolved\">Learn why we announce this.</a></p>\n</div>"
    },
    {
      "id": "SECURITY-2322",
      "reporter": "Kevin Guerroudj, Justin Philip, Marc Heyries, Wadeck Follonier, CloudBees, Inc.",
      "title": "CSRF vulnerability in PLUGIN_NAME results in RCE",
      "cve": "CVE-2022-30969",
      "cvss": {
        "severity": "High",
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "description_adoc": "PLUGIN_NAME 1.1 and earlier does not require POST requests for a form validation endpoint executing a provided Groovy script, resulting in a cross-site request forgery (CSRF) vulnerability.\n\nThis vulnerability allows attackers to execute arbitrary code without sandbox protection if the victim is an administrator.\n\nAs of publication of this advisory, there is no fix. link:/security/plugins/#unresolved[Learn why we announce this.]",
      "plugins": [
        {
          "name": "autocomplete-parameter",
          "title": "Autocomplete Parameter",
          "previous": "1.1",
          "fixed": null
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Autocomplete Parameter Plugin 1.1 and earlier does not require POST requests for a form validation endpoint executing a provided Groovy script, resulting in a cross-site request forgery (CSRF) vulnerability.</p>\n</div>\n<div class=\"paragraph\">\n<p>This vulnerability allows attackers to execute arbitrary code without sandbox protection if the victim is an administrator.</p>\n</div>\n<div class=\"paragraph\">\n<p>As of publication of this advisory, there is no fix. <a href=\"/security/plugins/#unresolved\">Learn why we announce this.</a></p>\n</div>"
    },
    {
      "id": "SECURITY-2267",
      "reporter": "Kevin Guerroudj",
      "title": "Stored XSS vulnerability in PLUGIN_NAME",
      "cve": "CVE-2022-30970",
      "cvss": {
        "severity": "High",
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H"
      },
      "description_adoc": "PLUGIN_NAME 1.1 and earlier references Dropdown Autocomplete parameter and Auto Complete String parameter names in an unsafe manner from Javascript embedded in view definitions.\n\nThis results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.\n\nNOTE: While this looks similar to SECURITY-2729, this is an independent problem and exploitable even on views rendering parameters that otherwise attempt to prevent XSS vulnerabilities in parameter names.\n\nAs of publication of this advisory, there is no fix. link:/security/plugins/#unresolved[Learn why we announce this.]",
      "plugins": [
        {
          "name": "autocomplete-parameter",
          "title": "Autocomplete Parameter",
          "previous": "1.1",
          "fixed": null
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Autocomplete Parameter Plugin 1.1 and earlier references Dropdown Autocomplete parameter and Auto Complete String parameter names in an unsafe manner from Javascript embedded in view definitions.</p>\n</div>\n<div class=\"paragraph\">\n<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nWhile this looks similar to SECURITY-2729, this is an independent problem and exploitable even on views rendering parameters that otherwise attempt to prevent XSS vulnerabilities in parameter names.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>As of publication of this advisory, there is no fix. <a href=\"/security/plugins/#unresolved\">Learn why we announce this.</a></p>\n</div>"
    },
    {
      "id": "SECURITY-1969",
      "reporter": "Daniel Beck, CloudBees, Inc.",
      "title": "XXE vulnerability in PLUGIN_NAME",
      "cve": "CVE-2022-30971 (XXE), CVE-2022-30972 (CSRF)",
      "cvss": {
        "severity": "High",
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:N"
      },
      "description_adoc": "PLUGIN_NAME 1.0 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.\n\nThis allows attackers with Item/Configure permission to have Jenkins parse a crafted file that uses external entities for extraction of secrets from the Jenkins controller or server-side request forgery.\n\nAdditionally, the HTTP endpoint calling the XML parser does not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.\n\nAs of publication of this advisory, there is no fix. link:/security/plugins/#unresolved[Learn why we announce this.]",
      "plugins": [
        {
          "name": "storable-configs-plugin",
          "title": "Storable Configs",
          "previous": "1.0",
          "fixed": null
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Storable Configs Plugin 1.0 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.</p>\n</div>\n<div class=\"paragraph\">\n<p>This allows attackers with Item/Configure permission to have Jenkins parse a crafted file that uses external entities for extraction of secrets from the Jenkins controller or server-side request forgery.</p>\n</div>\n<div class=\"paragraph\">\n<p>Additionally, the HTTP endpoint calling the XML parser does not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>\n</div>\n<div class=\"paragraph\">\n<p>As of publication of this advisory, there is no fix. <a href=\"/security/plugins/#unresolved\">Learn why we announce this.</a></p>\n</div>"
    }
  ],
  "components": [],
  "index_details_html": null,
  "content_html": null
}