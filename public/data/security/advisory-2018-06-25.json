{
  "title": "Jenkins Security Advisory 2018-06-25",
  "date": "2018-06-25",
  "url": "/security/advisory/2018-06-25/",
  "kind": "plugins",
  "core": null,
  "issues": [
    {
      "id": "SECURITY-915",
      "reporter": "Orange Tsai(@orange_8361) from DEVCORE",
      "title": "CSRF vulnerability and missing permission checks in GitHub Plugin allowed capturing credentials",
      "cve": "CVE-2018-1000600",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:N"
      },
      "description_adoc": "A form action method in GitHub Plugin did not check the permission of the user accessing it, allowing anyone with Overall/Read access to Jenkins to cause Jenkins to send a GitHub API request to create an API token to an attacker-specified URL.\n\nThis allowed users with Overall/Read access to Jenkins to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.\n\nAdditionally, this form validation method did not require POST requests, resulting in a CSRF vulnerability.\n\nThe form validation method now requires POST requests and the Overall/Administer permission.\n",
      "plugins": [
        {
          "name": "github",
          "title": "GitHub",
          "previous": "1.29.1",
          "fixed": "1.29.2"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>A form action method in GitHub Plugin did not check the permission of the user accessing it, allowing anyone with Overall/Read access to Jenkins to cause Jenkins to send a GitHub API request to create an API token to an attacker-specified URL.</p>\n</div>\n<div class=\"paragraph\">\n<p>This allowed users with Overall/Read access to Jenkins to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>\n</div>\n<div class=\"paragraph\">\n<p>Additionally, this form validation method did not require POST requests, resulting in a CSRF vulnerability.</p>\n</div>\n<div class=\"paragraph\">\n<p>The form validation method now requires POST requests and the Overall/Administer permission.</p>\n</div>"
    },
    {
      "id": "SECURITY-440",
      "reporter": "Jesse Glick, CloudBees, Inc.",
      "title": "Arbitrary file read vulnerability in SSH Credentials Plugin with Credentials Binding Plugin",
      "cve": "CVE-2018-1000601",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
      },
      "description_adoc": "SSH Credentials Plugin allowed the creation of SSH credentials with keys \"From a file on Jenkins controller\".\nCredentials Binding Plugin 1.13 and newer allows binding SSH credentials to environment variables.\nIn combination, these two features allow users with the permission to configure a job to read arbitrary files on the Jenkins controller by creating an SSH credential referencing an arbitrary file on the Jenkins controller, and binding it to an environment variable in a job.\n\nSSH Credentials Plugin no longer supports SSH credentials from files on the Jenkins controller file system, neither user-specified file paths nor `~/.ssh`.\nExisting SSH credentials of these kinds are migrated to \"directly entered\" SSH credentials.\n\nNOTE: If plugin:blueocean[Blue Ocean] is installed, it needs to be updated to 1.5.1 or 1.6.1, or the creation of pipelines for plain Git will not work anymore after installing the fix for this issue.\n",
      "plugins": [
        {
          "name": "ssh-credentials",
          "title": "SSH Credentials",
          "previous": 1.13,
          "fixed": 1.14
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>SSH Credentials Plugin allowed the creation of SSH credentials with keys \"From a file on Jenkins controller\".\nCredentials Binding Plugin 1.13 and newer allows binding SSH credentials to environment variables.\nIn combination, these two features allow users with the permission to configure a job to read arbitrary files on the Jenkins controller by creating an SSH credential referencing an arbitrary file on the Jenkins controller, and binding it to an environment variable in a job.</p>\n</div>\n<div class=\"paragraph\">\n<p>SSH Credentials Plugin no longer supports SSH credentials from files on the Jenkins controller file system, neither user-specified file paths nor <code>~/.ssh</code>.\nExisting SSH credentials of these kinds are migrated to \"directly entered\" SSH credentials.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nIf plugin:blueocean[Blue Ocean] is installed, it needs to be updated to 1.5.1 or 1.6.1, or the creation of pipelines for plain Git will not work anymore after installing the fix for this issue.\n</td>\n</tr>\n</table>\n</div>"
    },
    {
      "id": "SECURITY-916",
      "reporter": null,
      "title": "HTTP session fixation vulnerability in SAML Plugin",
      "cve": "CVE-2018-1000602",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N"
      },
      "description_adoc": "SAML Plugin did not invalidate the previous session and create a new one upon successful login, allowing attackers able to control or obtain another user's pre-login session ID to impersonate them.\n\nSAML Plugin now invalidates the previous session during login and creates a new one.\n",
      "plugins": [
        {
          "name": "saml",
          "title": "SAML",
          "previous": "1.0.6",
          "fixed": "1.0.7"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>SAML Plugin did not invalidate the previous session and create a new one upon successful login, allowing attackers able to control or obtain another user&#8217;s pre-login session ID to impersonate them.</p>\n</div>\n<div class=\"paragraph\">\n<p>SAML Plugin now invalidates the previous session during login and creates a new one.</p>\n</div>"
    },
    {
      "id": "SECURITY-808",
      "reporter": "Thomas de Grenier de Latour",
      "title": "CSRF vulnerability and missing permission checks in Openstack Cloud Plugin allowed capturing credentials",
      "cve": "CVE-2018-1000603",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:N"
      },
      "description_adoc": "Openstack Cloud Plugin did not perform permission checks on methods implementing form validation.\nThis allowed users with Overall/Read access to Jenkins to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins, and to cause Jenkins to submit HTTP requests to attacker-specified URLs.\n\nAdditionally, these form validation methods did not require POST requests, resulting in a CSRF vulnerability.\n\nThese form validation methods now require POST requests and Overall/Administer permissions.\n",
      "plugins": [
        {
          "name": "openstack-cloud",
          "title": "Openstack Cloud",
          "previous": 2.35,
          "fixed": 2.36
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Openstack Cloud Plugin did not perform permission checks on methods implementing form validation.\nThis allowed users with Overall/Read access to Jenkins to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins, and to cause Jenkins to submit HTTP requests to attacker-specified URLs.</p>\n</div>\n<div class=\"paragraph\">\n<p>Additionally, these form validation methods did not require POST requests, resulting in a CSRF vulnerability.</p>\n</div>\n<div class=\"paragraph\">\n<p>These form validation methods now require POST requests and Overall/Administer permissions.</p>\n</div>"
    },
    {
      "id": "SECURITY-825",
      "reporter": "Oleg Nenashev, CloudBees, Inc.",
      "title": "AWS CodeDeploy Plugin persisted possibly sensitive environment variables in job configuration",
      "cve": "CVE-2018-1000402",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "AWS CodeDeploy Plugin could persist environment variables from the last run of any project with the post-build step configured in the job's `config.xml` file.\n\nIn some cases, this allowed users with file system access or Extended Read permission to obtain those potentially sensitive environment variables by accessing the project's `config.xml`.\n\nAWS CodeDeploy Plugin 1.20 and newer no longer stores build environment variables on disk.\nExisting job `config.xml` will retain the stored environment variables until the job configuration is saved again.\n",
      "plugins": [
        {
          "name": "codedeploy",
          "title": "AWS CodeDeploy",
          "previous": 1.19,
          "fixed": "1.20"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>AWS CodeDeploy Plugin could persist environment variables from the last run of any project with the post-build step configured in the job&#8217;s <code>config.xml</code> file.</p>\n</div>\n<div class=\"paragraph\">\n<p>In some cases, this allowed users with file system access or Extended Read permission to obtain those potentially sensitive environment variables by accessing the project&#8217;s <code>config.xml</code>.</p>\n</div>\n<div class=\"paragraph\">\n<p>AWS CodeDeploy Plugin 1.20 and newer no longer stores build environment variables on disk.\nExisting job <code>config.xml</code> will retain the stored environment variables until the job configuration is saved again.</p>\n</div>"
    },
    {
      "id": "SECURITY-833",
      "reporter": "Viktor Gazdag",
      "title": "AWS CodeDeploy Plugin stored AWS Secret Key in plain text",
      "cve": "CVE-2018-1000403",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "AWS CodeDeploy Plugin stored the AWS Secret Key in its configuration unencrypted in jobs' `config.xml` files and its global configuration file on the Jenkins controller.\nThis key could be viewed by users with Extended Read permission, or access to the Jenkins controller file system.\n\nWhile masked from view using a password form field, the AWS Secret Key was transferred in plain text to users when accessing the job configuration form.\n\nAWS CodeDeploy Plugin 1.20 and newer stores the AWS Secret Key encrypted in the configuration files on disk and no longer transfers it to users viewing the configuration form in plain text.\nExisting jobs need to have their configuration saved for existing plain text secret keys to be overwritten.\n",
      "plugins": [
        {
          "name": "codedeploy",
          "title": "AWS CodeDeploy",
          "previous": 1.19,
          "fixed": "1.20"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>AWS CodeDeploy Plugin stored the AWS Secret Key in its configuration unencrypted in jobs' <code>config.xml</code> files and its global configuration file on the Jenkins controller.\nThis key could be viewed by users with Extended Read permission, or access to the Jenkins controller file system.</p>\n</div>\n<div class=\"paragraph\">\n<p>While masked from view using a password form field, the AWS Secret Key was transferred in plain text to users when accessing the job configuration form.</p>\n</div>\n<div class=\"paragraph\">\n<p>AWS CodeDeploy Plugin 1.20 and newer stores the AWS Secret Key encrypted in the configuration files on disk and no longer transfers it to users viewing the configuration form in plain text.\nExisting jobs need to have their configuration saved for existing plain text secret keys to be overwritten.</p>\n</div>"
    },
    {
      "id": "SECURITY-834",
      "reporter": "Viktor Gazdag",
      "title": "AWS CodeBuild Plugin stored AWS Secret Key in plain text",
      "cve": "CVE-2018-1000404",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "AWS CodeBuild Plugin stored the AWS Secret Key in its configuration unencrypted in jobs' `config.xml` files on the Jenkins controller.\nThis key could be viewed by users with Extended Read permission, or access to the Jenkins controller file system.\n\nWhile masked from view using a password form field, the AWS Secret Key was transferred in plain text to users when accessing the job configuration form.\n\nAWS CodeBuild Plugin 0.27 and newer stores the AWS Secret Key encrypted in the configuration file on disk and no longer transfers it to users viewing the configuration form in plain text.\nExisting jobs need to have their configuration saved for existing plain text secret keys to be overwritten.\n",
      "plugins": [
        {
          "name": "aws-codebuild",
          "title": "AWS CodeBuild",
          "previous": 0.26,
          "fixed": 0.27
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>AWS CodeBuild Plugin stored the AWS Secret Key in its configuration unencrypted in jobs' <code>config.xml</code> files on the Jenkins controller.\nThis key could be viewed by users with Extended Read permission, or access to the Jenkins controller file system.</p>\n</div>\n<div class=\"paragraph\">\n<p>While masked from view using a password form field, the AWS Secret Key was transferred in plain text to users when accessing the job configuration form.</p>\n</div>\n<div class=\"paragraph\">\n<p>AWS CodeBuild Plugin 0.27 and newer stores the AWS Secret Key encrypted in the configuration file on disk and no longer transfers it to users viewing the configuration form in plain text.\nExisting jobs need to have their configuration saved for existing plain text secret keys to be overwritten.</p>\n</div>"
    },
    {
      "id": "SECURITY-967",
      "reporter": "Viktor Gazdag",
      "title": "AWS CodePipeline Plugin stored AWS Secret Key in plain text",
      "cve": "CVE-2018-1000401",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "AWS CodePipeline Plugin stored the AWS Secret Key in its configuration unencrypted in jobs' `config.xml` files on the Jenkins controller.\nThis key could be viewed by users with Extended Read permission, or access to the Jenkins controller file system.\n\nWhile masked from view using a password form field, the AWS Secret Key was transferred in plain text to users when accessing the job configuration form.\n\nAWS CodePipeline Plugin 0.37 and newer stores the AWS Secret Key encrypted in the configuration file on disk and no longer transfers it to users viewing the configuration form in plain text.\nExisting jobs need to have their configuration saved for existing plain text secret keys to be overwritten.\n",
      "plugins": [
        {
          "name": "aws-codepipeline",
          "title": "AWS CodePipeline",
          "previous": 0.36,
          "fixed": 0.37
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>AWS CodePipeline Plugin stored the AWS Secret Key in its configuration unencrypted in jobs' <code>config.xml</code> files on the Jenkins controller.\nThis key could be viewed by users with Extended Read permission, or access to the Jenkins controller file system.</p>\n</div>\n<div class=\"paragraph\">\n<p>While masked from view using a password form field, the AWS Secret Key was transferred in plain text to users when accessing the job configuration form.</p>\n</div>\n<div class=\"paragraph\">\n<p>AWS CodePipeline Plugin 0.37 and newer stores the AWS Secret Key encrypted in the configuration file on disk and no longer transfers it to users viewing the configuration form in plain text.\nExisting jobs need to have their configuration saved for existing plain text secret keys to be overwritten.</p>\n</div>"
    },
    {
      "id": "SECURITY-906",
      "reporter": null,
      "title": "Persisted cross-site scripting vulnerability in Badge Plugin",
      "cve": "CVE-2018-1000604",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"
      },
      "description_adoc": "Badge Plugin stored and displayed user-provided HTML for badges and summaries unprocessed, allowing users with the ability to control badge content to store malicious HTML to be displayed within Jenkins.\n\nBadge Plugin 1.5 and newer sanitizes the provided HTML for display on the Jenkins web UI.\n",
      "plugins": [
        {
          "name": "badge",
          "title": "Badge",
          "previous": 1.4,
          "fixed": 1.5
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Badge Plugin stored and displayed user-provided HTML for badges and summaries unprocessed, allowing users with the ability to control badge content to store malicious HTML to be displayed within Jenkins.</p>\n</div>\n<div class=\"paragraph\">\n<p>Badge Plugin 1.5 and newer sanitizes the provided HTML for display on the Jenkins web UI.</p>\n</div>"
    },
    {
      "id": "SECURITY-941",
      "reporter": "Daniel Beck, CloudBees, Inc.",
      "title": "CollabNet Plugin globally and unconditionally disables SSL/TLS certificate validation",
      "cve": "CVE-2018-1000605",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:N"
      },
      "description_adoc": "CollabNet Plugin disabled SSL/TLS certificate validation for the entire Jenkins controller JVM by default.\n\nCollabNet Plugin 2.0.5 and newer no longer does that.\nIt instead requires users to opt in to disabling SSL/TLS certificate validation by setting the system property `hudson.plugins.collabnet.CollabNetPlugin.skipSslValidation` to `true`.\nThis feature applies to connections by this plugin only.\n",
      "plugins": [
        {
          "name": "collabnet",
          "title": "CollabNet Plugins",
          "previous": "2.0.4",
          "fixed": "2.0.5"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>CollabNet Plugin disabled SSL/TLS certificate validation for the entire Jenkins controller JVM by default.</p>\n</div>\n<div class=\"paragraph\">\n<p>CollabNet Plugin 2.0.5 and newer no longer does that.\nIt instead requires users to opt in to disabling SSL/TLS certificate validation by setting the system property <code>hudson.plugins.collabnet.CollabNetPlugin.skipSslValidation</code> to <code>true</code>.\nThis feature applies to connections by this plugin only.</p>\n</div>"
    },
    {
      "id": "SECURITY-819",
      "reporter": "Thomas de Grenier de Latour",
      "title": "Server-side request forgery vulnerability in URLTrigger Plugin",
      "cve": "CVE-2018-1000606",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"
      },
      "description_adoc": "A form validation method in URLTrigger Plugin did not check the permission of the user accessing them, allowing anyone with Overall/Read access to Jenkins to cause Jenkins to send a GET request to a specified URL.\n\nAdditionally, this form validation method did not require POST requests, resulting in a CSRF vulnerability.\n\nThis form validation method now no longer connects to a user provided URL.\n",
      "plugins": [
        {
          "name": "urltrigger",
          "title": "URLTrigger",
          "previous": 0.41,
          "fixed": 0.42
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>A form validation method in URLTrigger Plugin did not check the permission of the user accessing them, allowing anyone with Overall/Read access to Jenkins to cause Jenkins to send a GET request to a specified URL.</p>\n</div>\n<div class=\"paragraph\">\n<p>Additionally, this form validation method did not require POST requests, resulting in a CSRF vulnerability.</p>\n</div>\n<div class=\"paragraph\">\n<p>This form validation method now no longer connects to a user provided URL.</p>\n</div>"
    },
    {
      "id": "SECURITY-870",
      "reporter": "Snyk Security Research Team",
      "title": "Arbitrary file write vulnerability in Fortify CloudScan Plugin",
      "cve": "CVE-2018-1000607",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"
      },
      "description_adoc": "Fortify CloudScan Plugin did not validate file names in rulepack ZIP archives it extracts, resulting in an arbitrary file write vulnerability.\n\nFortify CloudScan Plugin 1.5.2 and newer rejects relative paths escaping the ZIP extraction base directory.\n",
      "plugins": [
        {
          "name": "fortify-cloudscan-jenkins-plugin",
          "title": null,
          "previous": "1.5.1",
          "fixed": "1.5.2"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Fortify CloudScan Plugin did not validate file names in rulepack ZIP archives it extracts, resulting in an arbitrary file write vulnerability.</p>\n</div>\n<div class=\"paragraph\">\n<p>Fortify CloudScan Plugin 1.5.2 and newer rejects relative paths escaping the ZIP extraction base directory.</p>\n</div>"
    },
    {
      "id": "SECURITY-950",
      "reporter": "Viktor Gazdag",
      "title": "IBM z/OS Connector Plugin stores password in plain text",
      "cve": "CVE-2018-1000608",
      "cvss": {
        "severity": "low",
        "vector": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "IBM z/OS Connector Plugin did not encrypt password credentials stored in its configuration.\nThis could be used by users with Jenkins controller file system access to obtain the password.\n\nWhile masked from view using a password form field, the AWS Secret Key was transferred in plain text to administrators when accessing the global configuration form.\n\nIBM z/OS Connector Plugin 2.0.0 and newer integrates with plugin:credentials[Credentials Plugin], no longer storing credentials itself.\n",
      "plugins": [
        {
          "name": "zos-connector",
          "title": "IBM z/OS Connector",
          "previous": "1.2.6.1",
          "fixed": "2.0.0"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>IBM z/OS Connector Plugin did not encrypt password credentials stored in its configuration.\nThis could be used by users with Jenkins controller file system access to obtain the password.</p>\n</div>\n<div class=\"paragraph\">\n<p>While masked from view using a password form field, the AWS Secret Key was transferred in plain text to administrators when accessing the global configuration form.</p>\n</div>\n<div class=\"paragraph\">\n<p>IBM z/OS Connector Plugin 2.0.0 and newer integrates with plugin:credentials[Credentials Plugin], no longer storing credentials itself.</p>\n</div>"
    },
    {
      "id": "SECURITY-927",
      "reporter": null,
      "title": "Configuration as Code Plugin allowed anyone with Overall/Read access to export Jenkins configuration",
      "cve": "CVE-2018-1000609",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
      },
      "description_adoc": "Configuration as Code Plugin lacked a permission check in the method handling the URL exporting the system configuration.\nThis allowed users with Overall/Read access to Jenkins to obtain this YAML export.\n\nThis permission check has been added in Configuration as Code Plugin 0.8-alpha.\n",
      "plugins": [
        {
          "name": "configuration-as-code",
          "title": "Configuration as Code",
          "previous": "0.7-alpha",
          "fixed": "0.8-alpha"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Configuration as Code Plugin lacked a permission check in the method handling the URL exporting the system configuration.\nThis allowed users with Overall/Read access to Jenkins to obtain this YAML export.</p>\n</div>\n<div class=\"paragraph\">\n<p>This permission check has been added in Configuration as Code Plugin 0.8-alpha.</p>\n</div>"
    },
    {
      "id": "SECURITY-929",
      "reporter": null,
      "title": "Configuration as Code Plugin logged passwords in clear text",
      "cve": "CVE-2018-1000610",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
      },
      "description_adoc": "Configuration as Code Plugin logged secrets set via its configuration to the Jenkins controller system log in plain text.\nThis allowed users with access to the Jenkins log files to obtain these passwords and similar secrets.\n\nSecrets are now masked when logging configuration.\n",
      "plugins": [
        {
          "name": "configuration-as-code",
          "title": "Configuration as Code",
          "previous": "0.7-alpha",
          "fixed": "0.8-alpha"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Configuration as Code Plugin logged secrets set via its configuration to the Jenkins controller system log in plain text.\nThis allowed users with access to the Jenkins log files to obtain these passwords and similar secrets.</p>\n</div>\n<div class=\"paragraph\">\n<p>Secrets are now masked when logging configuration.</p>\n</div>"
    }
  ],
  "components": [],
  "index_details_html": null,
  "content_html": null
}