{
  "title": "Jenkins Security Advisory 2019-01-28",
  "date": "2019-01-28",
  "url": "/security/advisory/2019-01-28/",
  "kind": "plugins",
  "core": null,
  "issues": [
    {
      "id": "SECURITY-1292",
      "reporter": "Mikhail Egorov, security researcher, https://twitter.com/0ang3el",
      "title": "Sandbox Bypass in Script Security Plugin",
      "cve": "CVE-2019-1003005",
      "cvss": {
        "severity": "high",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "description_adoc": "Script Security sandbox protection could be circumvented during the script compilation phase by applying AST transforming annotations such as `@Grab` to source code elements.\n\nThis affected an HTTP endpoint used to validate a user-submitted Groovy script that was not covered in the link:../2019-01-08/#SECURITY-1266[2019-01-08 fix for SECURITY-1266] and allowed users with Overall/Read permission to bypass the sandbox protection and execute arbitrary code on the Jenkins controller.\n\nThe affected HTTP endpoint now applies a safe Groovy compiler configuration prohibiting unsafe AST transforming annotations.\n",
      "plugins": [
        {
          "name": "script-security",
          "title": "Script Security",
          "previous": "1.50",
          "fixed": "1.51"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Script Security sandbox protection could be circumvented during the script compilation phase by applying AST transforming annotations such as <code>@Grab</code> to source code elements.</p>\n</div>\n<div class=\"paragraph\">\n<p>This affected an HTTP endpoint used to validate a user-submitted Groovy script that was not covered in the <a href=\"../2019-01-08/#SECURITY-1266\">2019-01-08 fix for SECURITY-1266</a> and allowed users with Overall/Read permission to bypass the sandbox protection and execute arbitrary code on the Jenkins controller.</p>\n</div>\n<div class=\"paragraph\">\n<p>The affected HTTP endpoint now applies a safe Groovy compiler configuration prohibiting unsafe AST transforming annotations.</p>\n</div>"
    },
    {
      "id": "SECURITY-1293",
      "reporter": null,
      "title": "Sandbox Bypass in Groovy Plugin",
      "cve": "CVE-2019-1003006",
      "cvss": {
        "severity": "high",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "description_adoc": "Groovy Plugin has a form validation HTTP endpoint used to validate a user-submitted Groovy script through compilation, which was not subject to sandbox protection.\nThis allowed attackers with Overall/Read access to execute arbitrary code on the Jenkins controller by applying AST transforming annotations such as `@Grab` to source code elements.\n\nThe affected HTTP endpoint now applies a safe Groovy compiler configuration preventing the use of unsafe AST transforming annotations.\n",
      "plugins": [
        {
          "name": "groovy",
          "title": "Groovy",
          "previous": "2.0",
          "fixed": "2.1"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Groovy Plugin has a form validation HTTP endpoint used to validate a user-submitted Groovy script through compilation, which was not subject to sandbox protection.\nThis allowed attackers with Overall/Read access to execute arbitrary code on the Jenkins controller by applying AST transforming annotations such as <code>@Grab</code> to source code elements.</p>\n</div>\n<div class=\"paragraph\">\n<p>The affected HTTP endpoint now applies a safe Groovy compiler configuration preventing the use of unsafe AST transforming annotations.</p>\n</div>"
    },
    {
      "id": "SECURITY-1295 (1)",
      "reporter": null,
      "title": "Sandbox Bypass via CSRF in Warnings Plugin",
      "cve": "CVE-2019-1003007",
      "cvss": {
        "severity": "high",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
      },
      "description_adoc": "Warnings Plugin has a form validation HTTP endpoint used to validate a user-submitted Groovy script through compilation, which was not subject to sandbox protection.\nThe endpoint checked for the Overall/RunScripts permission, but did not require POST requests, so it was vulnerable to cross-site request forgery (CSRF).\nThis allowed attackers to execute arbitrary code on the Jenkins controller by applying AST transforming annotations such as `@Grab` to source code elements.\n\nThe affected HTTP endpoint now applies a safe Groovy compiler configuration preventing the use of unsafe AST transforming annotations.\nAdditionally, the form validation HTTP endpoint now requires that requests be sent via POST to prevent CSRF.\n",
      "plugins": [
        {
          "name": "warnings",
          "title": null,
          "previous": "5.0.0",
          "fixed": "5.0.1"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Warnings Plugin has a form validation HTTP endpoint used to validate a user-submitted Groovy script through compilation, which was not subject to sandbox protection.\nThe endpoint checked for the Overall/RunScripts permission, but did not require POST requests, so it was vulnerable to cross-site request forgery (CSRF).\nThis allowed attackers to execute arbitrary code on the Jenkins controller by applying AST transforming annotations such as <code>@Grab</code> to source code elements.</p>\n</div>\n<div class=\"paragraph\">\n<p>The affected HTTP endpoint now applies a safe Groovy compiler configuration preventing the use of unsafe AST transforming annotations.\nAdditionally, the form validation HTTP endpoint now requires that requests be sent via POST to prevent CSRF.</p>\n</div>"
    },
    {
      "id": "SECURITY-1295 (2)",
      "reporter": null,
      "title": "Sandbox Bypass via CSRF in Warnings Next Generation Plugin",
      "cve": "CVE-2019-1003008",
      "cvss": {
        "severity": "high",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
      },
      "description_adoc": "Warnings Next Generation Plugin has a form validation HTTP endpoint used to validate a Groovy script through compilation, which was not subject to sandbox protection.\nThe endpoint checked for the Overall/RunScripts permission, but did not require POST requests, so it was vulnerable to cross-site request forgery (CSRF).\nThis allowed attackers to execute arbitrary code on the Jenkins controller by applying AST transforming annotations such as `@Grab` to source code elements.\n\nThe affected HTTP endpoint now applies a safe Groovy compiler configuration preventing the use of unsafe AST transforming annotations.\nAdditionally, the form validation HTTP endpoint now requires that requests be sent via POST to prevent CSRF.\n",
      "plugins": [
        {
          "name": "warnings-ng",
          "title": "Warnings",
          "previous": "2.1.1",
          "fixed": "2.1.2"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Warnings Next Generation Plugin has a form validation HTTP endpoint used to validate a Groovy script through compilation, which was not subject to sandbox protection.\nThe endpoint checked for the Overall/RunScripts permission, but did not require POST requests, so it was vulnerable to cross-site request forgery (CSRF).\nThis allowed attackers to execute arbitrary code on the Jenkins controller by applying AST transforming annotations such as <code>@Grab</code> to source code elements.</p>\n</div>\n<div class=\"paragraph\">\n<p>The affected HTTP endpoint now applies a safe Groovy compiler configuration preventing the use of unsafe AST transforming annotations.\nAdditionally, the form validation HTTP endpoint now requires that requests be sent via POST to prevent CSRF.</p>\n</div>"
    },
    {
      "id": "SECURITY-859",
      "reporter": "Chris Jacobs, Comscore, Inc., Systems Engineer",
      "title": "Improper certificate validation with StartTLS in Active Directory Plugin",
      "cve": "CVE-2019-1003009",
      "cvss": {
        "severity": "high",
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N"
      },
      "description_adoc": "Active Directory Plugin performs TLS upgrade (StartTLS) after connecting to domain controllers through insecure LDAP.\nIn this mode, certificates were not properly validated, effectively trusting all certificates, allowing man-in-the-middle attacks.\n\nThis only affected TLS upgrades.\nThe LDAPS mode, available by setting the system property `hudson.plugins.active_directory.ActiveDirectorySecurityRealm.forceLdaps` to `true`, was unaffected.\n\nThe plugin now properly validates certificates according to the TLS trust configuration when performing a TLS upgrade.\n",
      "plugins": [
        {
          "name": "active-directory",
          "title": "Active Directory",
          "previous": "2.10",
          "fixed": "2.11"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Active Directory Plugin performs TLS upgrade (StartTLS) after connecting to domain controllers through insecure LDAP.\nIn this mode, certificates were not properly validated, effectively trusting all certificates, allowing man-in-the-middle attacks.</p>\n</div>\n<div class=\"paragraph\">\n<p>This only affected TLS upgrades.\nThe LDAPS mode, available by setting the system property <code>hudson.plugins.active_directory.ActiveDirectorySecurityRealm.forceLdaps</code> to <code>true</code>, was unaffected.</p>\n</div>\n<div class=\"paragraph\">\n<p>The plugin now properly validates certificates according to the TLS trust configuration when performing a TLS upgrade.</p>\n</div>"
    },
    {
      "id": "SECURITY-1095",
      "reporter": "Oleg Nenashev",
      "title": "CSRF vulnerability in Git Plugin",
      "cve": "CVE-2019-1003010",
      "cvss": {
        "severity": "low",
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N"
      },
      "description_adoc": "Git Plugin allows the creation of a tag in a job workspace's Git repository with accompanying metadata attached to a build record.\n\nThe HTTP endpoint to create the tag did not require POST requests, resulting in a CSRF vulnerability.\n\nThe HTTP endpoint to create the tag now requires that requests are sent via POST.\n",
      "plugins": [
        {
          "name": "git",
          "title": "Git",
          "previous": "3.9.1",
          "fixed": "3.9.2"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Git Plugin allows the creation of a tag in a job workspace&#8217;s Git repository with accompanying metadata attached to a build record.</p>\n</div>\n<div class=\"paragraph\">\n<p>The HTTP endpoint to create the tag did not require POST requests, resulting in a CSRF vulnerability.</p>\n</div>\n<div class=\"paragraph\">\n<p>The HTTP endpoint to create the tag now requires that requests are sent via POST.</p>\n</div>"
    },
    {
      "id": "SECURITY-1102",
      "reporter": "Andy Caldwell and Chris Swindle, Metaswitch Networks",
      "title": "Recursive token expansion results in information disclosure and DoS in Token Macro Plugin",
      "cve": "CVE-2019-1003011",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "description_adoc": "Token Macro Plugin recursively applied token expansion.\n\nThis could be used by users able to affect input to token expansion (such as change log messages), to inject additional tokens into the input, which would then be expanded, resulting in information disclosure (for example values of environment variables), or denial of service.\n\nMost tokens have been changed to no longer recursively apply token expansion.\n",
      "plugins": [
        {
          "name": "token-macro",
          "title": "Token Macro",
          "previous": "2.5",
          "fixed": "2.6"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Token Macro Plugin recursively applied token expansion.</p>\n</div>\n<div class=\"paragraph\">\n<p>This could be used by users able to affect input to token expansion (such as change log messages), to inject additional tokens into the input, which would then be expanded, resulting in information disclosure (for example values of environment variables), or denial of service.</p>\n</div>\n<div class=\"paragraph\">\n<p>Most tokens have been changed to no longer recursively apply token expansion.</p>\n</div>"
    },
    {
      "id": "SECURITY-1201",
      "reporter": "Wadeck Follonier, CloudBees, Inc.",
      "title": "Blue Ocean did not require CSRF tokens",
      "cve": "CVE-2019-1003012",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N"
      },
      "description_adoc": "Blue Ocean did not require CSRF tokens (\"crumbs\") for POST requests with the `Content-Type: application/json`.\n\nBlue Ocean now requires that valid CSRF tokens are present in POST requests.\n",
      "plugins": [
        {
          "name": "blueocean",
          "title": "Blue Ocean",
          "previous": "1.10.1",
          "fixed": "1.10.2"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Blue Ocean did not require CSRF tokens (\"crumbs\") for POST requests with the <code>Content-Type: application/json</code>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Blue Ocean now requires that valid CSRF tokens are present in POST requests.</p>\n</div>"
    },
    {
      "id": "SECURITY-1204",
      "reporter": "Man Shum, security researcher, https://www.linkedin.com/in/man-shum/\n",
      "title": "XSS vulnerability via user description in Blue Ocean",
      "cve": "CVE-2019-1003013",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N"
      },
      "description_adoc": "Blue Ocean did not properly escape HTML/JavaScript content set on the current user's description field, resulting in a cross-site scripting vulnerability exploitable by administrators and other people accessing Jenkins with the same user account.\n\nBlue Ocean now properly escapes HTML/JavaScript content set on the current user's description field.\n",
      "plugins": [
        {
          "name": "blueocean",
          "title": "Blue Ocean",
          "previous": "1.10.1",
          "fixed": "1.10.2"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Blue Ocean did not properly escape HTML/JavaScript content set on the current user&#8217;s description field, resulting in a cross-site scripting vulnerability exploitable by administrators and other people accessing Jenkins with the same user account.</p>\n</div>\n<div class=\"paragraph\">\n<p>Blue Ocean now properly escapes HTML/JavaScript content set on the current user&#8217;s description field.</p>\n</div>"
    },
    {
      "id": "SECURITY-1253",
      "reporter": "Adam Willard",
      "title": "XSS vulnerability in Config File Provider Plugin",
      "cve": "CVE-2019-1003014",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N"
      },
      "description_adoc": "Config File Provider Plugin improperly handled script names in its JavaScript-based UI, resulting in a stored cross-site scripting (XSS) vulnerability.\n\nConfig File Provider Plugin now properly handles script names.\n",
      "plugins": [
        {
          "name": "config-file-provider",
          "title": "Config File Provider",
          "previous": "3.4.1",
          "fixed": "3.5"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Config File Provider Plugin improperly handled script names in its JavaScript-based UI, resulting in a stored cross-site scripting (XSS) vulnerability.</p>\n</div>\n<div class=\"paragraph\">\n<p>Config File Provider Plugin now properly handles script names.</p>\n</div>"
    },
    {
      "id": "SECURITY-905 (1)",
      "reporter": "Thomas Chauchefoin and Julien Szlamowicz of Synacktiv",
      "title": "XXE vulnerability in Job Import Plugin",
      "cve": "CVE-2019-1003015",
      "cvss": {
        "severity": "high",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:L"
      },
      "description_adoc": "Job Import Plugin allows to import jobs from other Jenkins instances.\nAs a first step in this process, Job Import Plugin sends a request to another Jenkins instance, parsing XML REST API output to obtain a list of jobs that could be imported.\n\nJob Import Plugin did not configure the XML parser in a way that would prevent XML External Entity (XXE) processing.\nThis allowed attackers able to control either the server Jenkins will query, or the URL Jenkins queries, to have it parse a maliciously crafted XML response that uses external entities for extraction of secrets from the Jenkins controller, server-side request forgery, or denial-of-service attacks.\n\nExternal entity resolution has been disabled for the XML parser used in Job Import Plugin 3.0.\n",
      "plugins": [
        {
          "name": "job-import-plugin",
          "title": "Job Import",
          "previous": "2.1",
          "fixed": "3.0"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Job Import Plugin allows to import jobs from other Jenkins instances.\nAs a first step in this process, Job Import Plugin sends a request to another Jenkins instance, parsing XML REST API output to obtain a list of jobs that could be imported.</p>\n</div>\n<div class=\"paragraph\">\n<p>Job Import Plugin did not configure the XML parser in a way that would prevent XML External Entity (XXE) processing.\nThis allowed attackers able to control either the server Jenkins will query, or the URL Jenkins queries, to have it parse a maliciously crafted XML response that uses external entities for extraction of secrets from the Jenkins controller, server-side request forgery, or denial-of-service attacks.</p>\n</div>\n<div class=\"paragraph\">\n<p>External entity resolution has been disabled for the XML parser used in Job Import Plugin 3.0.</p>\n</div>"
    },
    {
      "id": "SECURITY-905 (2)",
      "reporter": "Thomas Chauchefoin and Julien Szlamowicz of Synacktiv",
      "title": "CSRF vulnerability and missing permission checks in Job Import Plugin allowed capturing credentials",
      "cve": "CVE-2019-1003016",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"
      },
      "description_adoc": "Job Import Plugin did not check user permissions on its API endpoint used to access remote Jenkins instances.\n    This allowed users with Overall/Read access to Jenkins to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.\n\nJob Import Plugin 3.0 will only access Jenkins instances using credentials defined in the global configuration.\n",
      "plugins": [
        {
          "name": "job-import-plugin",
          "title": "Job Import",
          "previous": "2.1",
          "fixed": "3.0"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Job Import Plugin did not check user permissions on its API endpoint used to access remote Jenkins instances.\n    This allowed users with Overall/Read access to Jenkins to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>\n</div>\n<div class=\"paragraph\">\n<p>Job Import Plugin 3.0 will only access Jenkins instances using credentials defined in the global configuration.</p>\n</div>"
    },
    {
      "id": "SECURITY-1302",
      "reporter": "Daniel Beck, CloudBees, Inc.",
      "title": "CSRF vulnerability in Job Import Plugin allowed creating and overwriting jobs, installing some plugins",
      "cve": "CVE-2019-1003017",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L"
      },
      "description_adoc": "Job Import Plugin did not require that POST requests are sent to its `/import` URL, which processes requests to import jobs.\nThis resulted in a cross-site request forgery (CSRF) vulnerability that could be exploited to create or replace jobs on the local instance if the remote Jenkins instance has different ones with the same name, or to install additional plugins, if jobs on the remote Jenkins instance reference them in their configuration.\n\nJob Import Plugin 3.0 restricted which remote Jenkins instances jobs can be imported from, limiting how this can be exploited.\nFrom Job Import Plugin 3.1, the `/import` URL requires that requests are sent via POST.\n",
      "plugins": [
        {
          "name": "job-import-plugin",
          "title": "Job Import",
          "previous": "3.0",
          "fixed": "3.1"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Job Import Plugin did not require that POST requests are sent to its <code>/import</code> URL, which processes requests to import jobs.\nThis resulted in a cross-site request forgery (CSRF) vulnerability that could be exploited to create or replace jobs on the local instance if the remote Jenkins instance has different ones with the same name, or to install additional plugins, if jobs on the remote Jenkins instance reference them in their configuration.</p>\n</div>\n<div class=\"paragraph\">\n<p>Job Import Plugin 3.0 restricted which remote Jenkins instances jobs can be imported from, limiting how this can be exploited.\nFrom Job Import Plugin 3.1, the <code>/import</code> URL requires that requests are sent via POST.</p>\n</div>"
    },
    {
      "id": "SECURITY-602",
      "reporter": "R. Tyler Croy, CloudBees, Inc.",
      "title": "GitHub Authentication Plugin showed plain text client secret in configuration form",
      "cve": "CVE-2019-1003018",
      "cvss": {
        "severity": "low",
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "GitHub Authentication Plugin stores the client secret in the global Jenkins configuration.\n\nWhile the client secret is stored encrypted on disk, it was transmitted in plain text as part of the configuration form and displayed without masking.\nThis could result in exposure of the client secret through browser extensions, cross-site scripting vulnerabilities, and similar situations.\n\nGitHub Authentication Plugin now encrypts the client secret transmitted to administrators viewing the global security configuration form.\n",
      "plugins": [
        {
          "name": "github-oauth",
          "title": "GitHub Authentication",
          "previous": "0.29",
          "fixed": "0.31"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>GitHub Authentication Plugin stores the client secret in the global Jenkins configuration.</p>\n</div>\n<div class=\"paragraph\">\n<p>While the client secret is stored encrypted on disk, it was transmitted in plain text as part of the configuration form and displayed without masking.\nThis could result in exposure of the client secret through browser extensions, cross-site scripting vulnerabilities, and similar situations.</p>\n</div>\n<div class=\"paragraph\">\n<p>GitHub Authentication Plugin now encrypts the client secret transmitted to administrators viewing the global security configuration form.</p>\n</div>"
    },
    {
      "id": "SECURITY-797",
      "reporter": "Wadeck Follonier, CloudBees, Inc.",
      "title": "Session fixation vulnerability in GitHub Authentication Plugin",
      "cve": "CVE-2019-1003019",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N"
      },
      "description_adoc": "GitHub Authentication Plugin did not invalidate the previous session and create a new one upon successful login, allowing attackers able to control or obtain another user's pre-login session ID to impersonate them.\n\nGitHub Authentication Plugin now invalidates the previous session during login and creates a new one.\n",
      "plugins": [
        {
          "name": "github-oauth",
          "title": "GitHub Authentication",
          "previous": "0.29",
          "fixed": "0.31"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>GitHub Authentication Plugin did not invalidate the previous session and create a new one upon successful login, allowing attackers able to control or obtain another user&#8217;s pre-login session ID to impersonate them.</p>\n</div>\n<div class=\"paragraph\">\n<p>GitHub Authentication Plugin now invalidates the previous session during login and creates a new one.</p>\n</div>"
    },
    {
      "id": "SECURITY-818",
      "reporter": "Thomas de Grenier de Latour",
      "title": "CSRF vulnerability and missing permission checks in Kanboard Plugin allowed server-side request forgery",
      "cve": "CVE-2019-1003020",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"
      },
      "description_adoc": "Kanboard Plugin did not perform permission checks on a method implementing form validation.\nThis allowed users with Overall/Read access to Jenkins to submit a GET request to an attacker-specified URL.\n\nAdditionally, this form validation method did not require POST requests, resulting in a CSRF vulnerability.\n\nThis form validation method now requires POST requests and Overall/Administer permissions.\n",
      "plugins": [
        {
          "name": "kanboard",
          "title": "Kanboard",
          "previous": "1.5.10",
          "fixed": "1.5.11"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Kanboard Plugin did not perform permission checks on a method implementing form validation.\nThis allowed users with Overall/Read access to Jenkins to submit a GET request to an attacker-specified URL.</p>\n</div>\n<div class=\"paragraph\">\n<p>Additionally, this form validation method did not require POST requests, resulting in a CSRF vulnerability.</p>\n</div>\n<div class=\"paragraph\">\n<p>This form validation method now requires POST requests and Overall/Administer permissions.</p>\n</div>"
    },
    {
      "id": "SECURITY-886",
      "reporter": "James Nord, CloudBees, Inc.",
      "title": "OpenId Connect Authentication Plugin showed plain text client secret in configuration form",
      "cve": "CVE-2019-1003021",
      "cvss": {
        "severity": "low",
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N"
      },
      "description_adoc": "OpenId Connect Authentication Plugin stores the client secret in the global Jenkins configuration.\n\nWhile the client secret is stored encrypted on disk, it was transmitted in plain text as part of the configuration form and displayed without masking.\nThis could result in exposure of the client secret through browser extensions, cross-site scripting vulnerabilities, and similar situations.\n\nThe OpenId Connect Authentication Plugin now encrypts the client secret transmitted to administrators viewing the global configuration form.\n",
      "plugins": [
        {
          "name": "oic-auth",
          "title": "OpenId Connect Authentication",
          "previous": "1.4",
          "fixed": "1.5"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>OpenId Connect Authentication Plugin stores the client secret in the global Jenkins configuration.</p>\n</div>\n<div class=\"paragraph\">\n<p>While the client secret is stored encrypted on disk, it was transmitted in plain text as part of the configuration form and displayed without masking.\nThis could result in exposure of the client secret through browser extensions, cross-site scripting vulnerabilities, and similar situations.</p>\n</div>\n<div class=\"paragraph\">\n<p>The OpenId Connect Authentication Plugin now encrypts the client secret transmitted to administrators viewing the global configuration form.</p>\n</div>"
    },
    {
      "id": "SECURITY-1153",
      "reporter": "Daniel Beck, CloudBees, Inc.",
      "title": "Monitoring Plugin did not apply CSRF protection even if enabled in Jenkins",
      "cve": "CVE-2019-1003022",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L"
      },
      "description_adoc": "Monitoring Plugin provides a standalone JavaMelody servlet with an independent CSRF protection configuration.\nEven if Jenkins had CSRF protection enabled, Monitoring Plugin may not have it enabled.\n\nMonitoring Plugin now checks on startup whether Jenkins has CSRF protection enabled and enables its own CSRF protection accordingly.\n\nNOTE: Monitoring Plugin does not take into account configuration changes applied after Jenkins startup or after Monitoring Plugin finishes loading.\nAdministrators need to restart Jenkins when enabling or disabling the CSRF protection configuration to apply the change to Monitoring Plugin.\n",
      "plugins": [
        {
          "name": "monitoring",
          "title": "Monitoring",
          "previous": "1.74.0",
          "fixed": "1.75.0"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Monitoring Plugin provides a standalone JavaMelody servlet with an independent CSRF protection configuration.\nEven if Jenkins had CSRF protection enabled, Monitoring Plugin may not have it enabled.</p>\n</div>\n<div class=\"paragraph\">\n<p>Monitoring Plugin now checks on startup whether Jenkins has CSRF protection enabled and enables its own CSRF protection accordingly.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nMonitoring Plugin does not take into account configuration changes applied after Jenkins startup or after Monitoring Plugin finishes loading.\nAdministrators need to restart Jenkins when enabling or disabling the CSRF protection configuration to apply the change to Monitoring Plugin.\n</td>\n</tr>\n</table>\n</div>"
    },
    {
      "id": "SECURITY-1154",
      "reporter": "Daniel Beck, CloudBees, Inc.",
      "title": "Clickjacking vulnerability in Monitoring Plugin",
      "cve": null,
      "cvss": {
        "severity": "low",
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:L"
      },
      "description_adoc": "Monitoring Plugin did not set the `X-Frame-Options` header, allowing its pages to be embedded.\nThis could result in clickjacking attacks.\n\nMonitoring Plugin now sets the `X-Frame-Options` header to `sameorigin`, preventing embedding.\n",
      "plugins": [
        {
          "name": "monitoring",
          "title": "Monitoring",
          "previous": "1.74.0",
          "fixed": "1.75.0"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Monitoring Plugin did not set the <code>X-Frame-Options</code> header, allowing its pages to be embedded.\nThis could result in clickjacking attacks.</p>\n</div>\n<div class=\"paragraph\">\n<p>Monitoring Plugin now sets the <code>X-Frame-Options</code> header to <code>sameorigin</code>, preventing embedding.</p>\n</div>"
    },
    {
      "id": "SECURITY-1271",
      "reporter": "Kalle Niemitalo, Procomp Solutions Oy",
      "title": "XSS vulnerability in Warnings Next Generation Plugin",
      "cve": "CVE-2019-1003023",
      "cvss": {
        "severity": "medium",
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N"
      },
      "description_adoc": "Warnings Next Generation Plugin did not properly escape HTML content in warnings displayed on the Jenkins UI, resulting in a cross-site scripting vulnerability exploitable by users able to control warnings parser input.\n\nWarnings Next Generation Plugin now removes unsafe HTML content from warnings.\n",
      "plugins": [
        {
          "name": "warnings-ng",
          "title": "Warnings",
          "previous": "1.0.1",
          "fixed": "2.0.0"
        }
      ],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Warnings Next Generation Plugin did not properly escape HTML content in warnings displayed on the Jenkins UI, resulting in a cross-site scripting vulnerability exploitable by users able to control warnings parser input.</p>\n</div>\n<div class=\"paragraph\">\n<p>Warnings Next Generation Plugin now removes unsafe HTML content from warnings.</p>\n</div>"
    }
  ],
  "components": [],
  "index_details_html": null,
  "content_html": null
}