{
  "title": "Jenkins Security Advisory 2024-08-07",
  "date": "2024-08-07",
  "url": "/security/advisory/2024-08-07/",
  "kind": "core",
  "core": {
    "lts": {
      "previous": "2.452.3",
      "fixed": "2.452.4 or 2.462.1"
    },
    "weekly": {
      "previous": "2.470",
      "fixed": "2.471"
    }
  },
  "issues": [
    {
      "id": "SECURITY-3430",
      "reporter": "jiangchenwei (Nebulalab) and yangyue (Nebulalab)",
      "title": "Arbitrary file read vulnerability through agent connections can lead to RCE",
      "cve": "CVE-2024-43044",
      "cvss": {
        "severity": "Critical",
        "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H"
      },
      "description_adoc": "NOTE: This entry was updated on 2024-08-10 to add a reference to a https://github.com/jenkinsci-cert/SECURITY-3430[workaround].\n\nJenkins uses the https://github.com/jenkinsci/remoting[Remoting library] (typically `agent.jar` or `remoting.jar`) for the communication between controller and agents.\nThis library allows agents to load classes and classloader resources from the controller, so that Java objects sent from the controller (build steps, etc.) can be executed on agents.\n\nIn addition to individual class and resource files, Remoting also allows Jenkins plugins to transmit entire jar files to agents using the `Channel#preloadJar` API.\nAs of publication of this advisory, this feature is used by the following plugins distributed by the Jenkins project:\nhttps://plugins.jenkins.io/bouncycastle-api/[bouncycastle API], https://plugins.jenkins.io/groovy/[Groovy], https://plugins.jenkins.io/ivy/[Ivy], https://plugins.jenkins.io/teamconcert/[TeamConcert]\n\nIn Remoting 3256.v88a_f6e922152 and earlier, except 3206.3208.v409508a_675ff and 3248.3250.v3277a_8e88c9b_, included in Jenkins 2.470 and earlier, LTS 2.452.3 and earlier, calls to `Channel#preloadJar` result in the retrieval of files from the controller by the agent using `ClassLoaderProxy#fetchJar`.\nAdditionally, the implementation of `ClassLoaderProxy#fetchJar` invoked on the controller does not restrict paths that agents could request to read from the controller file system.\n\nThis allows agent processes, code running on agents, and attackers with Agent/Connect permission to read arbitrary files from the Jenkins controller file system.\n\nNOTE: This is a critical vulnerability as the information obtained can be used to increase access up to and including remote code execution (RCE).\nSee link:/security/advisory/2024-01-24/#SECURITY-3314[SECURITY-3314] for known impacts of exploiting arbitrary file read vulnerabilities in Jenkins.\nBe aware that the limitation of unreadable binary data with some character encodings discussed in SECURITY-3314 does not apply to SECURITY-3430.\n\n**Fix Description:**  +\nThe Remoting library in Jenkins 2.471, LTS 2.452.4, LTS 2.462.1 now sends jar file contents with `Channel#preloadJar` requests, the only use case of `ClassLoaderProxy#fetchJar` in agents, so that agents do not need to request jar file contents from controllers anymore.\n\nTo retain compatibility with older versions of Remoting in combination with the plugins listed above, `ClassLoaderProxy#fetchJar` is retained and otherwise unused, just deprecated.\nIts implementation in Jenkins 2.471, LTS 2.452.4, LTS 2.462.1 was changed so that it is now limited to retrieving jar files referenced in the core classloader or any plugin classloader.\n\nNOTE: To protect from exploitation, the presence of the fix is only required to be installed on the controller.\nAgents with older versions of remoting can still be used safely.\n\nNOTE: In case of problems with `Channel#preloadJar` on older Remoting clients, administrators can disable this protection by setting the link:/doc/book/managing/system-properties/#hudson-remoting-channel-disable_jar_url_validator[Java system property `hudson.remoting.Channel.DISABLE_JAR_URL_VALIDATOR`] on the controller to `true`.\nThis is only advisable if code running on agents, including build scripts and test code from SCM, is as trusted as Jenkins administrators.\n\nNOTE: Administrators who want to prohibit jar requests by agents through `ClassLoaderProxy#fetchJar` entirely can set the link:/doc/book/managing/system-properties/#jenkins-security-s2m-jarurlvalidatorimpl-reject_all[Java system property `jenkins.security.s2m.JarURLValidatorImpl.REJECT_ALL`] on the controller to `true`.\nThis may break some features of the plugins listed above on agents running older versions of Remoting.\nIf you use affected functionality of the plugins identified above, agents should be updated to a version of remoting matching the version on the controller.\n\n**Workaround:**  +\nA workaround for this issue is available https://github.com/jenkinsci-cert/SECURITY-3430[on GitHub] for administrators unable to immediately update.\nIt will disable the affected `Channel#preloadJar` functionality, and is therefore incompatible with the affected functionality of the plugins mentioned above.\n\nNOTE: We recommend that you https://docs.github.com/en/account-and-profile/managing-subscriptions-and-notifications-on-github/setting-up-notifications/configuring-notifications#configuring-your-watch-settings-for-an-individual-repository[watch] at least new releases in https://github.com/jenkinsci-cert/SECURITY-3430[this repository] to be informed of updates to the workaround.",
      "plugins": [],
      "components": [],
      "description_html": "<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nThis entry was updated on 2024-08-10 to add a reference to a <a href=\"https://github.com/jenkinsci-cert/SECURITY-3430\">workaround</a>.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>Jenkins uses the <a href=\"https://github.com/jenkinsci/remoting\">Remoting library</a> (typically <code>agent.jar</code> or <code>remoting.jar</code>) for the communication between controller and agents.\nThis library allows agents to load classes and classloader resources from the controller, so that Java objects sent from the controller (build steps, etc.) can be executed on agents.</p>\n</div>\n<div class=\"paragraph\">\n<p>In addition to individual class and resource files, Remoting also allows Jenkins plugins to transmit entire jar files to agents using the <code>Channel#preloadJar</code> API.\nAs of publication of this advisory, this feature is used by the following plugins distributed by the Jenkins project:\n<a href=\"https://plugins.jenkins.io/bouncycastle-api/\">bouncycastle API</a>, <a href=\"https://plugins.jenkins.io/groovy/\">Groovy</a>, <a href=\"https://plugins.jenkins.io/ivy/\">Ivy</a>, <a href=\"https://plugins.jenkins.io/teamconcert/\">TeamConcert</a></p>\n</div>\n<div class=\"paragraph\">\n<p>In Remoting 3256.v88a_f6e922152 and earlier, except 3206.3208.v409508a_675ff and 3248.3250.v3277a_8e88c9b_, included in Jenkins 2.470 and earlier, LTS 2.452.3 and earlier, calls to <code>Channel#preloadJar</code> result in the retrieval of files from the controller by the agent using <code>ClassLoaderProxy#fetchJar</code>.\nAdditionally, the implementation of <code>ClassLoaderProxy#fetchJar</code> invoked on the controller does not restrict paths that agents could request to read from the controller file system.</p>\n</div>\n<div class=\"paragraph\">\n<p>This allows agent processes, code running on agents, and attackers with Agent/Connect permission to read arbitrary files from the Jenkins controller file system.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nThis is a critical vulnerability as the information obtained can be used to increase access up to and including remote code execution (RCE).\nSee <a href=\"/security/advisory/2024-01-24/#SECURITY-3314\">SECURITY-3314</a> for known impacts of exploiting arbitrary file read vulnerabilities in Jenkins.\nBe aware that the limitation of unreadable binary data with some character encodings discussed in SECURITY-3314 does not apply to SECURITY-3430.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p><strong>Fix Description:</strong> <br>\nThe Remoting library in Jenkins 2.471, LTS 2.452.4, LTS 2.462.1 now sends jar file contents with <code>Channel#preloadJar</code> requests, the only use case of <code>ClassLoaderProxy#fetchJar</code> in agents, so that agents do not need to request jar file contents from controllers anymore.</p>\n</div>\n<div class=\"paragraph\">\n<p>To retain compatibility with older versions of Remoting in combination with the plugins listed above, <code>ClassLoaderProxy#fetchJar</code> is retained and otherwise unused, just deprecated.\nIts implementation in Jenkins 2.471, LTS 2.452.4, LTS 2.462.1 was changed so that it is now limited to retrieving jar files referenced in the core classloader or any plugin classloader.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nTo protect from exploitation, the presence of the fix is only required to be installed on the controller.\nAgents with older versions of remoting can still be used safely.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nIn case of problems with <code>Channel#preloadJar</code> on older Remoting clients, administrators can disable this protection by setting the <a href=\"/doc/book/managing/system-properties/#hudson-remoting-channel-disable_jar_url_validator\">Java system property <code>hudson.remoting.Channel.DISABLE_JAR_URL_VALIDATOR</code></a> on the controller to <code>true</code>.\nThis is only advisable if code running on agents, including build scripts and test code from SCM, is as trusted as Jenkins administrators.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nAdministrators who want to prohibit jar requests by agents through <code>ClassLoaderProxy#fetchJar</code> entirely can set the <a href=\"/doc/book/managing/system-properties/#jenkins-security-s2m-jarurlvalidatorimpl-reject_all\">Java system property <code>jenkins.security.s2m.JarURLValidatorImpl.REJECT_ALL</code></a> on the controller to <code>true</code>.\nThis may break some features of the plugins listed above on agents running older versions of Remoting.\nIf you use affected functionality of the plugins identified above, agents should be updated to a version of remoting matching the version on the controller.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p><strong>Workaround:</strong> <br>\nA workaround for this issue is available <a href=\"https://github.com/jenkinsci-cert/SECURITY-3430\">on GitHub</a> for administrators unable to immediately update.\nIt will disable the affected <code>Channel#preloadJar</code> functionality, and is therefore incompatible with the affected functionality of the plugins mentioned above.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<i class=\"fa icon-note\" title=\"Note\"></i>\n</td>\n<td class=\"content\">\nWe recommend that you <a href=\"https://docs.github.com/en/account-and-profile/managing-subscriptions-and-notifications-on-github/setting-up-notifications/configuring-notifications#configuring-your-watch-settings-for-an-individual-repository\">watch</a> at least new releases in <a href=\"https://github.com/jenkinsci-cert/SECURITY-3430\">this repository</a> to be informed of updates to the workaround.\n</td>\n</tr>\n</table>\n</div>"
    },
    {
      "id": "SECURITY-3349",
      "reporter": "Daniel Beck, CloudBees, Inc.",
      "title": "Missing permission check allows accessing other users' \"My Views\"",
      "cve": "CVE-2024-43045",
      "cvss": {
        "severity": "Medium",
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N"
      },
      "description_adoc": "Jenkins 2.470 and earlier, LTS 2.452.3 and earlier does not perform a permission check in an HTTP endpoint.\n\nThis allows attackers with Overall/Read permission to access other users' \"My Views\".\nAttackers with global View/Configure and View/Delete permissions are also able to change other users' \"My Views\".\n\nJenkins 2.471, LTS 2.452.4, LTS 2.462.1 restricts access to a user's \"My Views\" to the owning user and administrators.",
      "plugins": [],
      "components": [],
      "description_html": "<div class=\"paragraph\">\n<p>Jenkins 2.470 and earlier, LTS 2.452.3 and earlier does not perform a permission check in an HTTP endpoint.</p>\n</div>\n<div class=\"paragraph\">\n<p>This allows attackers with Overall/Read permission to access other users' \"My Views\".\nAttackers with global View/Configure and View/Delete permissions are also able to change other users' \"My Views\".</p>\n</div>\n<div class=\"paragraph\">\n<p>Jenkins 2.471, LTS 2.452.4, LTS 2.462.1 restricts access to a user&#8217;s \"My Views\" to the owning user and administrators.</p>\n</div>"
    }
  ],
  "components": [],
  "index_details_html": null,
  "content_html": null
}